
## 第一部分： 基础信息
description: AliOS Things维测组件，包含系统异常coredump、栈回溯backtrace、CPUusage及常用的调试诊断功能
name: debug                                      # <必选项> 建议至少20字以上
version: dev_aos
type: common                                        # <必选项> 组件类型，为：solution, chip, board, common, sdk

tag:                                                # <可选项> 组件分类，缺省值： ''
license: Apache license v2.0                        # <可选项> 源代码的许可证，要确保所有代码、文件的许可证不冲突。如：MIT，Apache license v2.0，BSD

## 第二部分：依赖信息
#           指定该组件依赖的组件及版本，版本支持条件比较，支持：>=v1.0, >v1.0, ==v1.0, <=v1.0, <v1.0, v1.0
#           未指定条件时，默认为 ==，如 v1.0 与 ==v1.0
# depends:                                 # <可选项> 该组件依赖其他的组件，合理的依赖才能保证组件能编译、使用
#   - minilibc: v7.2.0
#   - aos: >=v7.2.0
depends:
  - vfs: dev_aos ? <DEBUG_LAST_WORD_ENABLE>
  - littlefs: dev_aos ? <DEBUG_LAST_WORD_ENABLE>
  - vfs: dev_aos ? <DEBUG_CPUUSAGE_RECODE_TO_FILE_ENABLE>
  - littlefs: dev_aos ? <DEBUG_CPUUSAGE_RECODE_TO_FILE_ENABLE>
  - ulog: dev_aos ? <DEBUG_ULOG_FLUSH>

## 第四部分：编译连接信息
# build_config:                            # <可选项> 编译配置项
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
build_config:
  include:
    - include/
  internal_include:
    - src/
  asmflag: -DAOS_COMP_DEBUG

source_file:
  - src/debug_panic.c
  - src/debug_print.c
  - src/debug_overview.c
  - src/debug_backtrace.c
  - src/debug_infoget.c
  - src/debug_cpuusage.c
  - src/debug_test.c ? <AOS_COMP_CLI>
  - src/debug_dumpsys.c ? <AOS_COMP_CLI>
  - src/debug_cli_cmd.c ? <AOS_COMP_CLI>
  - src/debug_lastword.c ? <DEBUG_LAST_WORD_ENABLE>
  - src/debug.c
  #- example/*.c ? <AOS_COMP_CLI>

## 第五部分：配置信息
def_config:
  AOS_COMP_DEBUG: 1
  DEBUG_PANIC_PRT_INT: 1
  DEBUG_PANIC_CLI: 1

  # cpuusage feature config
  DEBUG_CPUUSAGE_RECODE_TO_FILE_ENABLE: 0
  DEBUG_CPUUSAGE_MAX_TASK: 80
  DEBUG_CPUUSAGE_FILE_NAME: "/data/cpuusage"

  # last_word feature config
  DEBUG_LAST_WORD_ENABLE: 0
  DEBUG_LOG_FILE_NUM: 10
  DEBUG_LASTWORD_RAM_ADDR: 0
  DEBUG_LASTWORD_REGION_LEN: 0x4000
  DEBUG_LOG_DIR_NAME: "/data/crash_reports"
  DEBUG_CONFIG_LOG_FILE_NAME: "/data/crash_reports/crash_report"
  DEBUG_CONFIG_LOG_FILE_INDEX: "/data/crash_reports/log_file_index"

  # ulog flush
  DEBUG_ULOG_FLUSH: 0

## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相当路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径
install:
  - dest: "include/aos"
    source:
      - "include/aos/*.h"

## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相当路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
