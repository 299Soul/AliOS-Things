
## 第一部分： 基础信息
name: py_engine
version: rel_3.3.0
description: "component built by cmake"             # <必选项> 建议至少20字以上
type: common                                        # <必选项> 组件类型，为：solution, chip, board, common, sdk

tag:                                                # <可选项> 组件分类，缺省值： ''
license: Apache license v2.0                        # <可选项> 源代码的许可证，要确保所有代码、文件的许可证不冲突。如：MIT，Apache license v2.0，BSD

depends:
  - osal_aos: rel_3.3.0
  - amp_adapter: rel_3.3.0
  - linksdk: "rel_3.3.0 ? <MICROPY_PY_ALIYUNIOT>"
  - ulog: "rel_3.3.0 ? <MICROPY_PY_ULOG>"
  - uagent: "rel_3.3.0 ? <PY_BUILD_UAGENT>"
  - kv: "rel_3.3.0 ? <MICROPY_PY_KV>"
  - mbedtls: rel_3.3.0? <PY_MBEDTLS_ENABLE>
  - cjson: rel_3.3.0? <PY_BUILD_CJSON>
  - fatfs: "rel_3.3.0 ? <PY_BUILD_FATFS>"
  - vfs: rel_3.3.0 ? <PY_BUILD_VFS>
  - mbmaster: "rel_3.3.0 ? <MICROPY_PY_MODBUS>"
  - oss: "rel_3.3.0 ? <MICROPY_PY_OSS>"
  - ucamera: "rel_3.3.0 ? <MICROPY_PY_UCAMERA>"
  - netmgr: "rel_3.3.0 ? <PY_BUILD_NETMGR>"
  - lwip: "rel_3.3.0 ? <PY_BUILD_LWIP>"
  - http: "rel_3.3.0 ? <PY_BUILD_HTTP, HAAS_PLATFORM>"
  - ucloud_ai: "rel_3.3.0 ? <MICROPY_PY_UCLOUD_AI>"
  - ai_agent: rel_3.3.0 ? <MICROPY_PY_AIAGENT>
  - uvoice: "rel_3.3.0 ? <MICROPY_PY_AUDIO, HAAS_PLATFORM>"
  - a2sa: "rel_3.3.0 ? <MICROPY_PY_AUDIO, HAAS_PLATFORM>"
  - ble_netconfig: "rel_3.3.0 ? <MICROPY_PY_BLE>"
  - ble_host: "rel_3.3.0 ? <MICROPY_PY_BLE>"
  - sntp: "rel_3.3.0 ? <MICROPY_PY_SNTP, HAAS_PLATFORM>"
  - ugraphics: "rel_3.3.0 ? <PY_BUILD_UGRAPHICS>"
  - little_ui: "rel_3.3.0 ? <MICROPY_PY_LVGL>"

build_config:
  prebuild_script: build_cmake.sh

  include:
  # adapter
    - adapter/
    - adapter/haas/ ? <HAAS_PLATFORM>
    - adapter/esp32/ ? <ESP_PLATFORM>

    # boards file
    - adapter/esp32/boards/GENERIC_C3/ ? <ESP_PLATFORM, BOARD_NODEMCU32C3>
    - adapter/esp32/boards/GENERIC/ ? <ESP_PLATFORM, BOARD_NODEMCU32S>
    - adapter/esp32/boards/M5STACK_CORE2/ ? <ESP_PLATFORM, BOARD_M5STACKCORE2>
    - adapter/haas/boards/HaaSEDUk1/ ? <HAAS_PLATFORM>
    - adapter/haas/boards/HaaS200/ ? <HAAS_PLATFORM>

    # cmake generated files
    - adapter/esp32/build-GENERIC_C3/ ? <ESP_PLATFORM, BOARD_NODEMCU32C3>
    - adapter/esp32/build-GENERIC/ ? <ESP_PLATFORM, BOARD_NODEMCU32S>
    - adapter/esp32/build-M5STACK_CORE2/ ? <ESP_PLATFORM, BOARD_M5STACKCORE2>
    - adapter/haas/build-HaaSEDUk1/ ? <HAAS_PLATFORM>
    - adapter/haas/build-HaaS200/ ? <HAAS_PLATFORM>

    # engine
    - engine/
    - engine/py/
    - engine/drivers/
    - engine/extmod/
    - engine/lib/
    - engine/lib/littlefs/
    - engine/shared/
    - engine/lib/berkeley-db-1.xx/
    - engine/lib/berkeley-db-1.xx/include/
    - engine/lib/berkeley-db-1.xx/PORT/include
    - external/amp_task/
    - external/amp_utils/
    - external/common/
    - external/amp_boot/
    - external/app_mgr/ ? <MICROPY_PY_OTA>
    - external/unzip/internal/ ? <MICROPY_PY_OTA>
    - external/unzip/include/ ? <MICROPY_PY_OTA>
    - modules/display/esp32/ ? <MICROPY_PY_DISPLAY, ESP_PLATFORM>

  libs:
    - ampchannel ? <PY_CHANNEL_ENABLE>

  libpath:
    - external/libs/haas1000 ? <BOARD_HAAS100>
    - external/libs/haas1000 ? <BOARD_HAASEDUK1>
    - external/libs/rtl872xd ? <BOARD_HAAS200>

source_file:
  # adapter
  - adapter/haas/main.c ? <HAAS_PLATFORM>
  - adapter/esp32/main.c ? <ESP_PLATFORM>

  # external
  - external/amp_task/*.c
  - external/amp_boot/*.c
  - external/app_mgr/*.c
  - external/unzip/src/*.c
  - external/amp_utils/*.c

def_config:
  AOS_BUILD_APP: "py_engine"
  FFCONF_H: lib/oofatfs/ffconf.h
  MBEDTLS_NO_PLATFORM_ENTROPY: 1
