
## 第一部分： 基础信息
name: py_engine
version: rel_3.3.0
description: "component built by cmake"             # <必选项> 建议至少20字以上
type: common                                        # <必选项> 组件类型，为：solution, chip, board, common, sdk

tag:                                                # <可选项> 组件分类，缺省值： ''
license: Apache license v2.0                        # <可选项> 源代码的许可证，要确保所有代码、文件的许可证不冲突。如：MIT，Apache license v2.0，BSD

depends:
  - osal_aos: rel_3.3.0
  - amp_adapter: rel_3.3.0
  - cli: "rel_3.3.0 ? <PY_BUILD_CLI>"
  - linksdk: "rel_3.3.0 ? <MICROPY_PY_ALIYUNIOT>"
  - ulog: "rel_3.3.0 ? <PY_BUILD_ULOG>"
  - uagent: "rel_3.3.0 ? <PY_BUILD_UAGENT>"
  - kv: "rel_3.3.0 ? <MICROPY_PY_KV>"
  - mbedtls: rel_3.3.0? <PY_BUILD_MBEDTLS>
  - cjson: rel_3.3.0? <PY_BUILD_CJSON>
  - fatfs: "rel_3.3.0 ? <PY_BUILD_FATFS>"
  - vfs: rel_3.3.0 ? <PY_BUILD_VFS>
  - mbmaster: "rel_3.3.0 ? <MICROPY_PY_MODBUS>"
  - oss: "rel_3.3.0 ? <MICROPY_PY_OSS>"
  - ucamera: "rel_3.3.0 ? <MICROPY_PY_UCAMERA>"
  - netmgr: "rel_3.3.0 ? <PY_BUILD_NETMGR>"
  - lwip: "rel_3.3.0 ? <PY_BUILD_LWIP>"
  - http: "rel_3.3.0 ? <PY_BUILD_HTTP, USE_AOS_KERNEL>"
  - mqtt: "rel_3.3.0 ? <PY_BUILD_MQTT>"
  - ucloud_ai: "rel_3.3.0 ? <MICROPY_PY_UCLOUD_AI>"
  - ai_agent: rel_3.3.0 ? <MICROPY_PY_UCLOUD_AI>
  - uvoice: "rel_3.3.0 ? <PY_BUILD_AUDIO, !ESP_PLATFROM>"
  - a2sa: "rel_3.3.0 ? <PY_BUILD_AUDIO, !ESP_PLATFROM>"
  - ble_netconfig: "rel_3.3.0 ? <PY_BUILD_BLE>"
  - ble_host: "rel_3.3.0 ? <PY_BUILD_BLE>"
  - sntp: "rel_3.3.0 ? <MICROPY_PY_SNTP, !ESP_PLATFORM>"
  - ugraphics: "rel_3.3.0 ? <PY_BUILD_UGRAPHICS>"
  - little_ui: "rel_3.3.0 ? <MICROPY_PY_LVGL>"

build_config:
  define:
    UVOICE_EVENT_BY_BUFFER_QUEUE: "1 ? <PY_BUILD_AUDIO>"
  include:
    # adapter
    - adapter/
    - adapter/haas/ ? <USE_AOS_KERNEL>
    - adapter/esp32/ ? <ESP_PLATFROM>
    - adapter/esp32/boards/GENERIC/ ? <ESP_PLATFROM>
    - adapter/esp32/camera/uart_cam/ ? <ESP_PLATFROM>
    # modules
    - modules/audio/aos
    - modules/audio/esp32
    - modules/ble/
    - modules/driver/
    - modules/aliyunIoT/
    - modules/minicv/
    - modules/modbus/
    - modules/mqtt/
    - modules/netmgr/
    - modules/netconfig/
    - modules/network/http/
    - modules/oss/
    - modules/ota/
    - modules/sntp/
    - modules/ucamera/
    - modules/ulog/
    - modules/kv/
    # engine
    - engine/
    - engine/py/
    - engine/drivers/
    - engine/extmod/
    - engine/lib/
    - engine/lib/oofatfs/
    - engine/lib/littlefs/
    - engine/shared/
    - engine/lib/berkeley-db-1.xx/
    - engine/lib/berkeley-db-1.xx/include/
    - engine/lib/berkeley-db-1.xx/PORT/include
    - external/amp_task/
    - external/amp_utils/
    - external/common/
    - external/amp_boot/
    - external/app_mgr/ ? <MICROPY_PY_OTA>
    - external/unzip/internal/ ? <MICROPY_PY_OTA>
    - external/unzip/include/ ? <MICROPY_PY_OTA>
    - external/amp_task/ ? <MICROPY_PY_OTA>
    - external/amp_utils/ ? <MICROPY_PY_OTA>

  prebuild_script: adapter/esp32/build_esp_sdk.sh ? <ESP_PLATFORM>

  libs:
    - ampchannel ? <PY_BUILD_CHANNEL>

  libpath:
    - external/libs/haas1000 ? <BOARD_HAAS100>
    - external/libs/haas1000 ? <BOARD_HAASEDUK1>
    - external/libs/rtl872xd ? <BOARD_HAAS200>

source_file:                             # <可选项> 指定参与编译的源代码文件，支持通配符，采用相对路径
  # adapter
  - adapter/haas/*.c ? <USE_AOS_KERNEL>
  - adapter/esp32/*.c ? <ESP_PLATFORM>
  - adapter/esp32/lv_mp.c ? <ESP_PLATFORM>
  - adapter/esp32/moddisplay.c ? <ESP_PLATFORM>
  - adapter/esp32/moddisplay_tft.c ? <ESP_PLATFORM, MICROPY_PY_TFT>
  - adapter/esp32/libs/neopixel.c ? <ESP_PLATFORM, MICROPY_PY_TFT>
  - adapter/esp32/genhdr/frozen_content.c ? <ESP_PLATFORM>
  - adapter/esp32/camera/uart_cam/uart_frame.c ? <ESP_PLATFORM, MICROPY_PY_UCAMERA>
  - adapter/esp32/tft/*.c ? <MICROPY_PY_TFT>
  - adapter/esp32/tft/font/DefaultFont.c ? <MICROPY_PY_TFT>
  - adapter/esp32/tft/font/DejaVuSans18.c ? <MICROPY_PY_TFT>
  - adapter/esp32/tft/font/DejaVuSans24.c ? <MICROPY_PY_TFT>
  - adapter/esp32/tft/font/DejaVuSans40.c ? <MICROPY_PY_TFT>
#  - adapter/esp32/camera/uart_cam/cam2core.c ? <ESP_PLATFORM>
  # engine
  - engine/py/*.c
  - engine/drivers/bus/*.c
  # TODO HAAS
  - engine/drivers/dht/dht.c
  - engine/extmod/machine_bitstream.c
  - engine/extmod/machine_i2c.c
  # TODO HaaS begin
  - engine/extmod/machine_mem.c
  - engine/extmod/machine_pulse.c
  - engine/extmod/machine_signal.c
  - engine/extmod/machine_spi.c
  - engine/extmod/modbluetooth.c
  # TODO end
  - engine/extmod/modbtree.c
  - engine/extmod/modframebuf.c
  - engine/extmod/modonewire.c
  - engine/extmod/moduasyncio.c
  - engine/extmod/modubinascii.c
  - engine/extmod/moducryptolib.c
  - engine/extmod/moductypes.c
  - engine/extmod/moduhashlib.c
  - engine/extmod/moduheapq.c
  - engine/extmod/modujson.c
  - engine/extmod/modurandom.c
  - engine/extmod/modure.c
  - engine/extmod/moduselect.c
  - engine/extmod/modussl_axtls.c
  - engine/extmod/modussl_mbedtls.c
  - engine/extmod/modutimeq.c
  - engine/extmod/moduwebsocket.c
  - engine/extmod/moduzlib.c
  - engine/extmod/modwebrepl.c
  - engine/extmod/uos_dupterm.c
  - engine/extmod/utime_mphal.c
  - engine/extmod/vfs.c
  - engine/extmod/vfs_blockdev.c  ? <MICROPY_VFS_FAT>
  - engine/extmod/vfs_fat.c  ? <MICROPY_VFS_FAT>
  - engine/extmod/vfs_fat_diskio.c  ? <MICROPY_VFS_FAT>
  - engine/extmod/vfs_fat_file.c  ? <MICROPY_VFS_FAT>
  - engine/extmod/vfs_lfs.c  ? <MICROPY_VFS_FAT>
  - engine/extmod/vfs_posix.c
  - engine/extmod/vfs_posix_file.c
  - engine/extmod/vfs_reader.c
  - engine/extmod/virtpin.c
  - engine/extmod/nimble/modbluetooth_nimble.c
  - engine/extmod/btstack/modbluetooth_btstack.c
  - engine/lib/berkeley-db-1.xx/btree/bt_close.c
  - engine/lib/berkeley-db-1.xx/btree/bt_conv.c
  - engine/lib/berkeley-db-1.xx/btree/bt_debug.c
  - engine/lib/berkeley-db-1.xx/btree/bt_delete.c
  - engine/lib/berkeley-db-1.xx/btree/bt_get.c
  - engine/lib/berkeley-db-1.xx/btree/bt_open.c
  - engine/lib/berkeley-db-1.xx/btree/bt_overflow.c
  - engine/lib/berkeley-db-1.xx/btree/bt_page.c
  - engine/lib/berkeley-db-1.xx/btree/bt_put.c
  - engine/lib/berkeley-db-1.xx/btree/bt_search.c
  - engine/lib/berkeley-db-1.xx/btree/bt_seq.c
  - engine/lib/berkeley-db-1.xx/btree/bt_split.c
  - engine/lib/berkeley-db-1.xx/btree/bt_utils.c
  - engine/lib/berkeley-db-1.xx/mpool/mpool.c
  - engine/lib/rel1.5/*.c
  #- engine/lib/uzlib/*.c
  - engine/shared/netutils/*.c
  - engine/shared/readline/*.c
  #- engine/shared/runtime TODO
  - engine/shared/runtime/interrupt_char.c
  - engine/shared/runtime/pyexec.c
  - engine/shared/runtime/stdout_helpers.c
  - engine/shared/runtime/sys_stdio_mphal.c
  - engine/shared/runtime/gchelper_generic.c ? <!ESP_PLATFROM>
  - engine/shared/timeutils/*.c
  - engine/shared/upyteshhelper/*.c
  # fs
  - engine/lib/oofatfs/ff.c ? <MICROPY_VFS_FAT>
  - engine/lib/oofatfs/ffunicode.c ? <MICROPY_VFS_FAT>
  - engine/lib/littlefs/lfs1.c  ? <MICROPY_VFS_FAT>
  - engine/lib/littlefs/lfs1_util.c  ? <MICROPY_VFS_FAT>
  - engine/lib/littlefs/lfs2.c  ? <MICROPY_VFS_FAT>
  - engine/lib/littlefs/lfs2_util.c  ? <MICROPY_VFS_FAT>
  - modules/driver/board_mgr.c
  - modules/driver/moddriver.c ? <MICROPY_PY_DRIVER>
  - modules/driver/pwm.c ? <MICROPY_PY_DRIVER>
  - modules/driver/adc.c ? <MICROPY_PY_DRIVER>
  - modules/driver/timer.c ? <MICROPY_PY_DRIVER>
  - modules/driver/i2c.c ? <MICROPY_PY_DRIVER>
  - modules/driver/spi.c ? <MICROPY_PY_DRIVER>
  - modules/driver/uart.c ? <MICROPY_PY_DRIVER>
  - modules/driver/gpio.c ? <MICROPY_PY_DRIVER>
  - modules/driver/wdt.c ? <MICROPY_PY_DRIVER>
  - modules/aliyunIoT/*.c ? <MICROPY_PY_ALIYUNIOT>
  - modules/ota/*.c ? <MICROPY_PY_OTA>
  - modules/oss/modoss.c ? <MICROPY_PY_OSS>
  #minicv
  - modules/ucloud_ai/moducloud_ai.c ? <MICROPY_PY_UCLOUD_AI>
  - modules/ucloud_ai/chatbot.c ? <MICROPY_PY_UCLOUD_AI>
  - modules/minicv/*.c ? <MICROPY_PY_MINICV>
  - modules/minicv/base/modules/c/src/*.cpp ? <MICROPY_PY_MINICV>
  - modules/minicv/base/modules/core/src/HaasImageUtils.cpp ? <MICROPY_PY_MINICV>
  - modules/minicv/base/modules/ml/src/HaasML.cpp ? <MICROPY_PY_MINICV>
  - modules/minicv/base/modules/ml/src/HaasMLCloud.cpp ? <MICROPY_PY_MINICV>
  - modules/minicv/base/modules/ml/src/HaasMLMnn.cpp ? <MICROPY_PY_MINICV>
  # modbus
  - modules/modbus/*.c ? <MICROPY_PY_MODBUS>
  # kv
  - modules/kv/modkv.c ? <MICROPY_PY_KV>
  # ulog
  - modules/ulog/*.c ? <PY_BUILD_ULOG>
  # network
  - modules/network/http/aos/modhttp.c ? <MICROPY_PY_HTTP, USE_AOS_KERNEL>
  - modules/network/http/aos/httpclient.c ? <MICROPY_PY_HTTP, USE_AOS_KERNEL>
  - modules/network/tcp/modtcp.c ? <PY_BUILD_TCP, USE_AOS_KERNEL>
  - modules/network/udp/modudp.c ? <PY_BUILD_UDP, USE_AOS_KERNEL>
  - modules/network/http/esp32/modhttp.c ? <MICROPY_PY_HTTP, ESP_PLATFORM>
  # audio
  - modules/audio/aos/*.c ? <PY_BUILD_AUDIO, !ESP_PLATFROM>
  - modules/audio/esp32/*.c ? <MICROPY_PY_AUDIO, BOARD_M5STACKCORE2>
  # ble
  - modules/ble/*.c ? <PY_BUILD_BLE>
  # system
  - modules/system/*.c ? <PY_BUILD_SYSTEM>
  # ucamera
  - modules/ucamera/*.c ? <MICROPY_PY_UCAMERA>
  # sntp
  - modules/sntp/*.c ? <MICROPY_PY_SNTP, !ESP_PLATFORM>
  - modules/ugraphics/*.c ? <PY_BUILD_UGRAPHICS>
  # mqtt
  - modules/mqtt/modmqtt.c ? <PY_BUILD_MQTT>
  - modules/mqtt/mqttclient.c ? <PY_BUILD_MQTT>
  # netconfig
  - modules/netconfig/*.c ? <PY_BUILD_BLE>
  # netmgr
  - modules/netmgr/modnetmgr.c ? <PY_BUILD_NETMGR>

  # external
  - external/amp_task/*.c
  - external/amp_boot/*.c ? <PY_BUILD_BOOT>
  - external/app_mgr/*.c ? <PY_BUILD_BOOT>
  - external/app_mgr/app_upgrade.c ? <MICROPY_PY_OTA>
#  - external/app_mgr/app_mgr.c ? <MICROPY_PY_OTA>
  - external/app_mgr/app_message.c ? <MICROPY_PY_OTA>
  - external/unzip/src/*.c ? <MICROPY_PY_OTA>
  - external/amp_task/*.c ? <MICROPY_PY_OTA>
  - external/amp_utils/*.c ? <MICROPY_PY_OTA>

def_config:
  # Activation start
  AOS_BUILD_APP: "py_engine"
  # CONFIG_DEBUG: 1
  # Activation end

## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相当路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径

## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相当路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
