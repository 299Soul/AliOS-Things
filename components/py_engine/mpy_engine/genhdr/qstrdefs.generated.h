// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTRnull, (const byte*)"\x00\x00" "")
QDEF(MP_QSTR_NULL, (const byte*)"\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x00" "")
QDEF(MP_QSTR___abs__, (const byte*)"\x95\x07" "__abs__")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x07" "__add__")
QDEF(MP_QSTR___and__, (const byte*)"\x0e\x07" "__and__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x0f" "__build_class__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\x09" "__class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x07" "__del__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x0b" "__delitem__")
QDEF(MP_QSTR___divmod__, (const byte*)"\x78\x0a" "__divmod__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\x09" "__enter__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x06" "__eq__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\x08" "__exit__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x08" "__file__")
QDEF(MP_QSTR___floordiv__, (const byte*)"\x46\x0c" "__floordiv__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x06" "__ge__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x0b" "__getitem__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x06" "__gt__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\x08" "__hash__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x0a" "__import__")
QDEF(MP_QSTR___int__, (const byte*)"\x16\x07" "__int__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\x08" "__init__")
QDEF(MP_QSTR___invert__, (const byte*)"\xf7\x0a" "__invert__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x08" "__isub__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x08" "__iter__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x06" "__le__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\x07" "__len__")
QDEF(MP_QSTR___lshift__, (const byte*)"\x09\x0a" "__lshift__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x06" "__lt__")
QDEF(MP_QSTR___ne__, (const byte*)"\x0e\x06" "__ne__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x08" "__main__")
QDEF(MP_QSTR___mod__, (const byte*)"\x63\x07" "__mod__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x0a" "__module__")
QDEF(MP_QSTR___mul__, (const byte*)"\x31\x07" "__mul__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x08" "__name__")
QDEF(MP_QSTR___neg__, (const byte*)"\x69\x07" "__neg__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x08" "__next__")
QDEF(MP_QSTR___or__, (const byte*)"\x38\x06" "__or__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x08" "__path__")
QDEF(MP_QSTR___pos__, (const byte*)"\x29\x07" "__pos__")
QDEF(MP_QSTR___pow__, (const byte*)"\x2d\x07" "__pow__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x0c" "__qualname__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x01\x0e" "__repl_print__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x08" "__repr__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\x0c" "__reversed__")
QDEF(MP_QSTR___rshift__, (const byte*)"\x57\x0a" "__rshift__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\x07" "__str__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\x0d" "__traceback__")
QDEF(MP_QSTR___truediv__, (const byte*)"\x88\x0b" "__truediv__")
QDEF(MP_QSTR___xor__, (const byte*)"\x20\x07" "__xor__")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\x01" "*")
QDEF(MP_QSTR__, (const byte*)"\xfa\x01" "_")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\x01" "/")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x05" "{:#b}")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\x01" "\x0a")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x08" "<module>")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x07" "<stdin>")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x05" "utf-8")
QDEF(MP_QSTR_ALT_OD, (const byte*)"\x88\x06" "ALT_OD")
QDEF(MP_QSTR_ALT_PP, (const byte*)"\xe3\x06" "ALT_PP")
QDEF(MP_QSTR_ANALOG, (const byte*)"\xaf\x06" "ANALOG")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x05" "ARRAY")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\x0e" "AttributeError")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\x07" "BFINT16")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\x07" "BFINT32")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\x08" "BFUINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\x08" "BFUINT32")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\x07" "BFUINT8")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\x06" "BF_LEN")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x06" "BF_POS")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x0d" "BaseException")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\x07" "BytesIO")
QDEF(MP_QSTR_DEBUG, (const byte*)"\x34\x05" "DEBUG")
QDEF(MP_QSTR_DEEPSLEEP_RESET, (const byte*)"\x14\x0f" "DEEPSLEEP_RESET")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\x08" "DecompIO")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\x08" "EOFError")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x09" "Exception")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x07" "FLOAT64")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x0d" "GeneratorExit")
QDEF(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x0a" "HARD_RESET")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x02" "IN")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x05" "INT16")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x05" "INT32")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x05" "INT64")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\x04" "INT8")
QDEF(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\x0b" "IRQ_FALLING")
QDEF(MP_QSTR_IRQ_RISING, (const byte*)"\x78\x0a" "IRQ_RISING")
QDEF(MP_QSTR_IRQ_RISING_FALLING, (const byte*)"\x60\x12" "IRQ_RISING_FALLING")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x0b" "LookupError")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x0b" "MemoryError")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x06" "NATIVE")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x13" "NotImplementedError")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x07" "OSError")
QDEF(MP_QSTR_OUT_OD, (const byte*)"\x1f\x06" "OUT_OD")
QDEF(MP_QSTR_OUT_PP, (const byte*)"\x34\x06" "OUT_PP")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x0b" "OrderedDict")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\x0d" "OverflowError")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x03" "PTR")
QDEF(MP_QSTR_PULL_DOWN, (const byte*)"\xad\x09" "PULL_DOWN")
QDEF(MP_QSTR_PULL_NONE, (const byte*)"\x55\x09" "PULL_NONE")
QDEF(MP_QSTR_PULL_UP, (const byte*)"\xba\x07" "PULL_UP")
QDEF(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\x0b" "PWRON_RESET")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x03" "Pin")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x07" "PinBase")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\x0c" "RuntimeError")
QDEF(MP_QSTR_SOFT_RESET, (const byte*)"\x01\x0a" "SOFT_RESET")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\x06" "Signal")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x0d" "StopIteration")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x08" "StringIO")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\x0a" "SystemExit")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x09" "TypeError")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x06" "UINT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x06" "UINT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x06" "UINT64")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\x05" "UINT8")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\x0c" "UnicodeError")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\x04" "VOID")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x0a" "ValueError")
QDEF(MP_QSTR_WDT_RESET, (const byte*)"\x08\x09" "WDT_RESET")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x11" "ZeroDivisionError")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0a" "a2b_base64")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x03" "abs")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\x04" "acos")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\x05" "acosh")
QDEF(MP_QSTR_add, (const byte*)"\x44\x03" "add")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\x09" "addressof")
QDEF(MP_QSTR_all, (const byte*)"\x44\x03" "all")
QDEF(MP_QSTR_any, (const byte*)"\x13\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x06" "append")
QDEF(MP_QSTR_args, (const byte*)"\xc2\x04" "args")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\x04" "asin")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x05" "asinh")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x05" "atan2")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x05" "atanh")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x0a" "b2a_base64")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x03" "bin")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x04" "bool")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\x0c" "bound_method")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\x09" "bytearray")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x0c" "bytearray_at")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x08" "bytecode")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\x05" "bytes")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x08" "bytes_at")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x08" "callable")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\x04" "ceil")
QDEF(MP_QSTR_center, (const byte*)"\x4e\x06" "center")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x06" "choice")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\x05" "clear")
QDEF(MP_QSTR_closure, (const byte*)"\x74\x07" "closure")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\x05" "cmath")
QDEF(MP_QSTR_code, (const byte*)"\x68\x04" "code")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x07" "collect")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\x07" "compile")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x07" "complex")
QDEF(MP_QSTR_const, (const byte*)"\xc0\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\x04" "copy")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x03" "cos")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\x04" "cosh")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x05" "count")
QDEF(MP_QSTR_current_tid, (const byte*)"\xca\x0b" "current_tid")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\x0a" "decompress")
QDEF(MP_QSTR_deepsleep, (const byte*)"\x9e\x09" "deepsleep")
QDEF(MP_QSTR_default, (const byte*)"\xce\x07" "default")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x07" "degrees")
QDEF(MP_QSTR_delay, (const byte*)"\x50\x05" "delay")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\x07" "deleter")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\x04" "dict")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\x11" "difference_update")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\x06" "digest")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x03" "dir")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x07" "disable")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x0b" "disable_irq")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x07" "discard")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x06" "divmod")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x03" "doc")
QDEF(MP_QSTR_dump, (const byte*)"\xe9\x04" "dump")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x05" "dumps")
QDEF(MP_QSTR_e, (const byte*)"\xc0\x01" "e")
QDEF(MP_QSTR_elapsed_micros, (const byte*)"\x39\x0e" "elapsed_micros")
QDEF(MP_QSTR_elapsed_millis, (const byte*)"\x8e\x0e" "elapsed_millis")
QDEF(MP_QSTR_enable, (const byte*)"\x04\x06" "enable")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x0a" "enable_irq")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\x08" "endswith")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\x09" "enumerate")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x04" "erfc")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\x04" "exec")
QDEF(MP_QSTR_execfile, (const byte*)"\x58\x08" "execfile")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x03" "exp")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x05" "expm1")
QDEF(MP_QSTR_extend, (const byte*)"\x63\x06" "extend")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x04" "fabs")
QDEF(MP_QSTR_fault_debug, (const byte*)"\x61\x0b" "fault_debug")
QDEF(MP_QSTR_filter, (const byte*)"\x25\x06" "filter")
QDEF(MP_QSTR_find, (const byte*)"\x01\x04" "find")
QDEF(MP_QSTR_float, (const byte*)"\x35\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x05" "floor")
QDEF(MP_QSTR_flush, (const byte*)"\x61\x05" "flush")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x04" "fmod")
QDEF(MP_QSTR_format, (const byte*)"\x26\x06" "format")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x05" "frexp")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x0a" "from_bytes")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\x08" "fromkeys")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x09" "frozenset")
QDEF(MP_QSTR_function, (const byte*)"\x27\x08" "function")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x05" "gamma")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x02" "gc")
QDEF(MP_QSTR_generator, (const byte*)"\x96\x09" "generator")
QDEF(MP_QSTR_get, (const byte*)"\x33\x03" "get")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x07" "getattr")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x0b" "getrandbits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\x06" "getter")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\x08" "getvalue")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x07" "globals")
QDEF(MP_QSTR_group, (const byte*)"\xba\x05" "group")
QDEF(MP_QSTR_hard_reset, (const byte*)"\xd0\x0a" "hard_reset")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x04" "hash")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x0b" "heap_unlock")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x07" "heapify")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x07" "heappop")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x08" "heappush")
QDEF(MP_QSTR_help, (const byte*)"\x94\x04" "help")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x03" "hex")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x07" "hexlify")
QDEF(MP_QSTR_id, (const byte*)"\x28\x02" "id")
QDEF(MP_QSTR_idle, (const byte*)"\xa1\x04" "idle")
QDEF(MP_QSTR_imag, (const byte*)"\x47\x04" "imag")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x05" "index")
QDEF(MP_QSTR_info, (const byte*)"\xeb\x04" "info")
QDEF(MP_QSTR_init, (const byte*)"\x1f\x04" "init")
QDEF(MP_QSTR_input, (const byte*)"\x73\x05" "input")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x03" "int")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\x13" "intersection_update")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x06" "invert")
QDEF(MP_QSTR_is_preempt_thread, (const byte*)"\x1a\x11" "is_preempt_thread")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x07" "isdigit")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x0a" "isdisjoint")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x05" "isinf")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x07" "islower")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x05" "isnan")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x0a" "issubclass")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\x0a" "issuperset")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x04" "iter")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\x08" "iterator")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x04" "join")
QDEF(MP_QSTR_kbd_intr, (const byte*)"\xf6\x08" "kbd_intr")
QDEF(MP_QSTR_keepends, (const byte*)"\x62\x08" "keepends")
QDEF(MP_QSTR_key, (const byte*)"\x32\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x04" "keys")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x05" "ldexp")
QDEF(MP_QSTR_len, (const byte*)"\x62\x03" "len")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x06" "lgamma")
QDEF(MP_QSTR_list, (const byte*)"\x27\x04" "list")
QDEF(MP_QSTR_little, (const byte*)"\x89\x06" "little")
QDEF(MP_QSTR_load, (const byte*)"\x63\x04" "load")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\x05" "loads")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\x06" "locals")
QDEF(MP_QSTR_log, (const byte*)"\x21\x03" "log")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x05" "log10")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x04" "log2")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\x06" "lstrip")
QDEF(MP_QSTR_machine, (const byte*)"\x60\x07" "machine")
QDEF(MP_QSTR_component, (const byte*)"\x6a\x09" "component")
QDEF(MP_QSTR_utils, (const byte*)"\xd2\x05" "utils")
QDEF(MP_QSTR_systemManager, (const byte*)"\x53\x0d" "systemManager")
QDEF(MP_QSTR_minicv, (const byte*)"\x13\x06" "minicv")
QDEF(MP_QSTR_DataInput, (const byte*)"\x63\x09" "DataInput")
QDEF(MP_QSTR_DATA_INPUT_CAMERA_NUMBER_NONE, (const byte*)"\x13\x1d" "DATA_INPUT_CAMERA_NUMBER_NONE")
QDEF(MP_QSTR_DATA_INPUT_CAMERA_NUMBER_FRONT, (const byte*)"\xf8\x1e" "DATA_INPUT_CAMERA_NUMBER_FRONT")
QDEF(MP_QSTR_DATA_INPUT_CAMERA_NUMBER_BACK, (const byte*)"\xb2\x1d" "DATA_INPUT_CAMERA_NUMBER_BACK")
QDEF(MP_QSTR_DATA_INPUT_CAMERA_NUMBER_MAX, (const byte*)"\x4d\x1c" "DATA_INPUT_CAMERA_NUMBER_MAX")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_NONE, (const byte*)"\xab\x16" "DATA_INPUT_SOURCE_NONE")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_IMAGE_BMP, (const byte*)"\x46\x1b" "DATA_INPUT_SOURCE_IMAGE_BMP")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_IMAGE_GIF, (const byte*)"\x51\x1b" "DATA_INPUT_SOURCE_IMAGE_GIF")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_IMAGE_PNG, (const byte*)"\x20\x1b" "DATA_INPUT_SOURCE_IMAGE_PNG")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_IMAGE_JPG, (const byte*)"\xe4\x1b" "DATA_INPUT_SOURCE_IMAGE_JPG")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_VIDEO_FILE, (const byte*)"\xc9\x1c" "DATA_INPUT_SOURCE_VIDEO_FILE")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_VIDEO_RTMP, (const byte*)"\x74\x1c" "DATA_INPUT_SOURCE_VIDEO_RTMP")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_VIDEO_RTSP, (const byte*)"\xaa\x1c" "DATA_INPUT_SOURCE_VIDEO_RTSP")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_CAMERA_USB, (const byte*)"\x23\x1c" "DATA_INPUT_SOURCE_CAMERA_USB")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_CAMERA_LOCAL, (const byte*)"\xca\x1e" "DATA_INPUT_SOURCE_CAMERA_LOCAL")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_CAMERA_IP, (const byte*)"\xde\x1b" "DATA_INPUT_SOURCE_CAMERA_IP")
QDEF(MP_QSTR_DATA_INPUT_SOURCE_MAX, (const byte*)"\x75\x15" "DATA_INPUT_SOURCE_MAX")
QDEF(MP_QSTR_openCamera, (const byte*)"\x68\x0a" "openCamera")
QDEF(MP_QSTR_checkDataReady, (const byte*)"\x18\x0e" "checkDataReady")
QDEF(MP_QSTR_requestData, (const byte*)"\x44\x0b" "requestData")
QDEF(MP_QSTR_releaseData, (const byte*)"\xdc\x0b" "releaseData")
QDEF(MP_QSTR_ImageCodec, (const byte*)"\xac\x0a" "ImageCodec")
QDEF(MP_QSTR_CODEC_IMAGE_SOURCE_NONE, (const byte*)"\x64\x17" "CODEC_IMAGE_SOURCE_NONE")
QDEF(MP_QSTR_CODEC_IMAG_SOURCE_IMAGE_PNG, (const byte*)"\xea\x1b" "CODEC_IMAG_SOURCE_IMAGE_PNG")
QDEF(MP_QSTR_CODEC_IMAG_SOURCE_IMAGE_JPG, (const byte*)"\x2e\x1b" "CODEC_IMAG_SOURCE_IMAGE_JPG")
QDEF(MP_QSTR_CODEC_IMAG_SOURCE_IMAGE_BMP, (const byte*)"\x8c\x1b" "CODEC_IMAG_SOURCE_IMAGE_BMP")
QDEF(MP_QSTR_CODEC_IMAG_SOURCE_IMAGE_GIF, (const byte*)"\x9b\x1b" "CODEC_IMAG_SOURCE_IMAGE_GIF")
QDEF(MP_QSTR_CODEC_IMAG_SOURCE_MAX, (const byte*)"\xbf\x15" "CODEC_IMAG_SOURCE_MAX")
QDEF(MP_QSTR_imgRead, (const byte*)"\x74\x07" "imgRead")
QDEF(MP_QSTR_imgReadMulti, (const byte*)"\xdd\x0c" "imgReadMulti")
QDEF(MP_QSTR_imgWrite, (const byte*)"\xfb\x08" "imgWrite")
QDEF(MP_QSTR_imgWriteMulti, (const byte*)"\xf2\x0d" "imgWriteMulti")
QDEF(MP_QSTR_imgDecode, (const byte*)"\x6a\x09" "imgDecode")
QDEF(MP_QSTR_imgDecode2, (const byte*)"\x98\x0a" "imgDecode2")
QDEF(MP_QSTR_imgEncode, (const byte*)"\xc0\x09" "imgEncode")
QDEF(MP_QSTR_haveImageReader, (const byte*)"\x9d\x0f" "haveImageReader")
QDEF(MP_QSTR_haveImageWriter, (const byte*)"\xf7\x0f" "haveImageWriter")
QDEF(MP_QSTR_ImageProc, (const byte*)"\x6c\x09" "ImageProc")
QDEF(MP_QSTR_IMAGE_PROC_NONE, (const byte*)"\xe6\x0f" "IMAGE_PROC_NONE")
QDEF(MP_QSTR_IMAGE_PROC_CPU, (const byte*)"\x2a\x0e" "IMAGE_PROC_CPU")
QDEF(MP_QSTR_IMAGE_PROC_OPENCV, (const byte*)"\x0d\x11" "IMAGE_PROC_OPENCV")
QDEF(MP_QSTR_IMAGE_PROC_HAL, (const byte*)"\x89\x0e" "IMAGE_PROC_HAL")
QDEF(MP_QSTR_IMAGE_PROC_MAX, (const byte*)"\x18\x0e" "IMAGE_PROC_MAX")
QDEF(MP_QSTR_cvtColor, (const byte*)"\x59\x08" "cvtColor")
QDEF(MP_QSTR_resize, (const byte*)"\xb7\x06" "resize")
QDEF(MP_QSTR_imgCopy, (const byte*)"\x23\x07" "imgCopy")
QDEF(MP_QSTR_rectangle, (const byte*)"\xa4\x09" "rectangle")
QDEF(MP_QSTR_circle, (const byte*)"\xb7\x06" "circle")
QDEF(MP_QSTR_drawMarker, (const byte*)"\x87\x0a" "drawMarker")
QDEF(MP_QSTR_fillPoly, (const byte*)"\x60\x08" "fillPoly")
QDEF(MP_QSTR_putText, (const byte*)"\xc9\x07" "putText")
QDEF(MP_QSTR_dilateErode, (const byte*)"\x8d\x0b" "dilateErode")
QDEF(MP_QSTR_imageAdd, (const byte*)"\x43\x08" "imageAdd")
QDEF(MP_QSTR_imageMinus, (const byte*)"\x4e\x0a" "imageMinus")
QDEF(MP_QSTR_imageElementMultiply, (const byte*)"\x90\x14" "imageElementMultiply")
QDEF(MP_QSTR_imageElementDivide, (const byte*)"\x8f\x12" "imageElementDivide")
QDEF(MP_QSTR_writeImageToFile, (const byte*)"\xc2\x10" "writeImageToFile")
QDEF(MP_QSTR_ML, (const byte*)"\xa4\x02" "ML")
QDEF(MP_QSTR_ML_ENGINE_NONE, (const byte*)"\xc0\x0e" "ML_ENGINE_NONE")
QDEF(MP_QSTR_ML_ENGINE_MNN, (const byte*)"\x07\x0d" "ML_ENGINE_MNN")
QDEF(MP_QSTR_ML_ENGINE_CLOUD, (const byte*)"\x7b\x0f" "ML_ENGINE_CLOUD")
QDEF(MP_QSTR_ML_ENGINE_ODLA, (const byte*)"\x2c\x0e" "ML_ENGINE_ODLA")
QDEF(MP_QSTR_ML_ENGINE_MAX, (const byte*)"\xbe\x0d" "ML_ENGINE_MAX")
QDEF(MP_QSTR_config, (const byte*)"\x4f\x06" "config")
QDEF(MP_QSTR_setInputData, (const byte*)"\x81\x0c" "setInputData")
QDEF(MP_QSTR_loadNet, (const byte*)"\x3c\x07" "loadNet")
QDEF(MP_QSTR_predict, (const byte*)"\x78\x07" "predict")
QDEF(MP_QSTR_getPredictResponses, (const byte*)"\x7e\x13" "getPredictResponses")
QDEF(MP_QSTR_unLoadNet, (const byte*)"\xc7\x09" "unLoadNet")
QDEF(MP_QSTR_UI, (const byte*)"\xb9\x02" "UI")
QDEF(MP_QSTR_UI_FRAMEWORK_NONE, (const byte*)"\x0f\x11" "UI_FRAMEWORK_NONE")
QDEF(MP_QSTR_UI_FRAMEWORK_GREENUI, (const byte*)"\xa2\x14" "UI_FRAMEWORK_GREENUI")
QDEF(MP_QSTR_UI_FRAMEWORK_FB, (const byte*)"\xc1\x0f" "UI_FRAMEWORK_FB")
QDEF(MP_QSTR_UI_FRAMEWORK_LVGL, (const byte*)"\xf4\x11" "UI_FRAMEWORK_LVGL")
QDEF(MP_QSTR_UI_FRAMEWORK_SDL, (const byte*)"\xbe\x10" "UI_FRAMEWORK_SDL")
QDEF(MP_QSTR_UI_FRAMEWORK_MAX, (const byte*)"\xd1\x10" "UI_FRAMEWORK_MAX")
QDEF(MP_QSTR_getDisplayWidth, (const byte*)"\xcf\x0f" "getDisplayWidth")
QDEF(MP_QSTR_getDisplayHeight, (const byte*)"\xd6\x10" "getDisplayHeight")
QDEF(MP_QSTR_getDisplayBacklight, (const byte*)"\x5c\x13" "getDisplayBacklight")
QDEF(MP_QSTR_setDisplayBacklight, (const byte*)"\x48\x13" "setDisplayBacklight")
QDEF(MP_QSTR_getDisplayType, (const byte*)"\x71\x0e" "getDisplayType")
QDEF(MP_QSTR_getDisplayFreq, (const byte*)"\xc9\x0e" "getDisplayFreq")
QDEF(MP_QSTR_setDisplayFreq, (const byte*)"\x5d\x0e" "setDisplayFreq")
QDEF(MP_QSTR_drawPoint, (const byte*)"\x29\x09" "drawPoint")
QDEF(MP_QSTR_drawLine, (const byte*)"\x8b\x08" "drawLine")
QDEF(MP_QSTR_drawRectangle, (const byte*)"\xe4\x0d" "drawRectangle")
QDEF(MP_QSTR_drawCircle, (const byte*)"\x77\x0a" "drawCircle")
QDEF(MP_QSTR_drawText, (const byte*)"\x58\x08" "drawText")
QDEF(MP_QSTR_drawPixels, (const byte*)"\x5e\x0a" "drawPixels")
QDEF(MP_QSTR_drawImage, (const byte*)"\x82\x09" "drawImage")
QDEF(MP_QSTR_updateDisplay, (const byte*)"\x2e\x0d" "updateDisplay")
QDEF(MP_QSTR_VideoCodec, (const byte*)"\xfa\x0a" "VideoCodec")
QDEF(MP_QSTR_VIDEO_CODEC_NONE, (const byte*)"\x30\x10" "VIDEO_CODEC_NONE")
QDEF(MP_QSTR_VIDEO_CODEC_FFMPEG, (const byte*)"\xe5\x12" "VIDEO_CODEC_FFMPEG")
QDEF(MP_QSTR_VIDEO_CODEC_HAL, (const byte*)"\x9f\x0f" "VIDEO_CODEC_HAL")
QDEF(MP_QSTR_VIDEO_CODEC_MAX, (const byte*)"\x0e\x0f" "VIDEO_CODEC_MAX")
QDEF(MP_QSTR_decodeConfig, (const byte*)"\x03\x0c" "decodeConfig")
QDEF(MP_QSTR_startDecode, (const byte*)"\x09\x0b" "startDecode")
QDEF(MP_QSTR_stopDecode, (const byte*)"\x11\x0a" "stopDecode")
QDEF(MP_QSTR_getDecodeImageData, (const byte*)"\x28\x12" "getDecodeImageData")
QDEF(MP_QSTR_encodeConfig, (const byte*)"\x69\x0c" "encodeConfig")
QDEF(MP_QSTR_startEncode, (const byte*)"\xa3\x0b" "startEncode")
QDEF(MP_QSTR_stopEncode, (const byte*)"\xbb\x0a" "stopEncode")
QDEF(MP_QSTR_getEncodePacketData, (const byte*)"\x0d\x13" "getEncodePacketData")
QDEF(MP_QSTR_driver, (const byte*)"\x1b\x06" "driver")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x04" "open")
QDEF(MP_QSTR_close, (const byte*)"\x33\x05" "close")
QDEF(MP_QSTR_read, (const byte*)"\xb7\x04" "read")
QDEF(MP_QSTR_write, (const byte*)"\x98\x05" "write")
QDEF(MP_QSTR_del, (const byte*)"\x68\x03" "del")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x06" "toggle")
QDEF(MP_QSTR_setFreq, (const byte*)"\xa7\x07" "setFreq")
QDEF(MP_QSTR_getFreq, (const byte*)"\xb3\x07" "getFreq")
QDEF(MP_QSTR_setDuty, (const byte*)"\x5b\x07" "setDuty")
QDEF(MP_QSTR_getDuty, (const byte*)"\x4f\x07" "getDuty")
QDEF(MP_QSTR_writeAndRead, (const byte*)"\x01\x0c" "writeAndRead")
QDEF(MP_QSTR_test, (const byte*)"\x33\x04" "test")
QDEF(MP_QSTR_AudioPlayer, (const byte*)"\x40\x0b" "AudioPlayer")
QDEF(MP_QSTR_audio, (const byte *)"\x53\x05" "audio")
QDEF(MP_QSTR_Player, (const byte *)"\xb6\x06" "Player")
QDEF(MP_QSTR_Recorder, (const byte *)"\x7f\x08" "Recorder")
QDEF(MP_QSTR_listPlay, (const byte*)"\x63\x08" "listPlay")
QDEF(MP_QSTR_listPlayStop, (const byte*)"\x1b\x0c" "listPlayStop")
QDEF(MP_QSTR_play, (const byte*)"\x21\x04" "play")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x04" "stop")
QDEF(MP_QSTR_pause, (const byte*)"\xd7\x05" "pause")
QDEF(MP_QSTR_resume, (const byte*)"\x5c\x06" "resume")
QDEF(MP_QSTR_complete, (const byte *)"\x8c\x08" "complete")
QDEF(MP_QSTR_stop_async, (const byte *)"\x64\x0a" "stop_async")
QDEF(MP_QSTR_pause_async, (const byte *)"\x2e\x0b" "pause_async")
QDEF(MP_QSTR_resume_async, (const byte *)"\xe5\x0c" "resume_async")
QDEF(MP_QSTR_set_source, (const byte *)"\xa5\x0a" "set_source")
QDEF(MP_QSTR_clr_source, (const byte *)"\xba\x0a" "clr_source")
QDEF(MP_QSTR_set_stream, (const byte *)"\x04\x0a" "set_stream")
QDEF(MP_QSTR_put_stream, (const byte *)"\xf7\x0a" "put_stream")
QDEF(MP_QSTR_clr_stream, (const byte *)"\x5b\x0a" "clr_stream")
QDEF(MP_QSTR_play_list, (const byte *)"\xfc\x09" "play_list")
QDEF(MP_QSTR_set_pcminfo, (const byte *)"\xe8\x0b" "set_pcminfo")
QDEF(MP_QSTR_get_duration, (const byte *)"\x72\x0c" "get_duration")
QDEF(MP_QSTR_get_position, (const byte *)"\xd5\x0c" "get_position")
QDEF(MP_QSTR_set_volume, (const byte *)"\x70\x0a" "set_volume")
QDEF(MP_QSTR_get_volume, (const byte *)"\xe4\x0a" "get_volume")
QDEF(MP_QSTR_volume_range, (const byte *)"\xad\x0c" "volume_range")
QDEF(MP_QSTR_playback, (const byte *)"\x0a\x08" "playback")
QDEF(MP_QSTR_wait_complete, (const byte *)"\x98\x0d" "wait_complete")
QDEF(MP_QSTR_download_abort, (const byte *)"\x44\x0e" "download_abort")
QDEF(MP_QSTR_cache_config, (const byte *)"\x5c\x0c" "cache_config")
QDEF(MP_QSTR_set_fade, (const byte *)"\x1e\x08" "set_fade")
QDEF(MP_QSTR_set_format, (const byte *)"\x3b\x0a" "set_format")
QDEF(MP_QSTR_set_standby, (const byte *)"\x2f\x0b" "set_standby")
QDEF(MP_QSTR_eq_enable, (const byte *)"\x8f\x09" "eq_enable")
QDEF(MP_QSTR_state_dump, (const byte *)"\x21\x0a" "state_dump")
QDEF(MP_QSTR_pcmdump_enable, (const byte *)"\x29\x0e" "pcmdump_enable")
QDEF(MP_QSTR_get_state, (const byte *)"\x3b\x09" "get_state")
QDEF(MP_QSTR_get_delay, (const byte *)"\xb9\x09" "get_delay")
QDEF(MP_QSTR_get_mediainfo, (const byte *)"\x46\x0d" "get_mediainfo")
QDEF(MP_QSTR_get_cacheinfo, (const byte *)"\xee\x0d" "get_cacheinfo")
QDEF(MP_QSTR_format_support, (const byte *)"\xd6\x0e" "format_support")
QDEF(MP_QSTR_seekto, (const byte*)"\x06\x06" "seekto")
QDEF(MP_QSTR_getPosition, (const byte*)"\x4a\x0b" "getPosition")
QDEF(MP_QSTR_getDuration, (const byte*)"\xad\x0b" "getDuration")
QDEF(MP_QSTR_getState, (const byte*)"\xc4\x08" "getState")
QDEF(MP_QSTR_onState, (const byte*)"\xb3\x07" "onState")
QDEF(MP_QSTR_Snd, (const byte *)"\xbc\x03" "Snd")
QDEF(MP_QSTR_install_codec_driver, (const byte *)"\xf4\x14" "install_codec_driver")
QDEF(MP_QSTR_uninstall_codec_driver, (const byte *)"\xcf\x16" "uninstall_codec_driver")
QDEF(MP_QSTR_setVolume, (const byte*)"\x2f\x09" "setVolume")
QDEF(MP_QSTR_getVolume, (const byte*)"\x3b\x09" "getVolume")
QDEF(MP_QSTR_wavplayer, (const byte *)"\x76\x09" "wavplayer")
QDEF(MP_QSTR_KeyPad, (const byte*)"\xa7\x06" "KeyPad")
QDEF(MP_QSTR_on, (const byte*)"\x64\x02" "on")
QDEF(MP_QSTR_Location, (const byte*)"\x78\x08" "Location")
QDEF(MP_QSTR_accessedWifi, (const byte*)"\x11\x0c" "accessedWifi")
QDEF(MP_QSTR_scannedWifi, (const byte*)"\x84\x0b" "scannedWifi")
QDEF(MP_QSTR_accessedLbs, (const byte*)"\x1d\x0b" "accessedLbs")
QDEF(MP_QSTR_nearbts, (const byte*)"\x38\x07" "nearbts")
QDEF(MP_QSTR_Tts, (const byte *)"\x76\x03" "Tts")
QDEF(MP_QSTR_setPitch, (const byte*)"\x81\x08" "setPitch")
QDEF(MP_QSTR_setSpeed, (const byte*)"\xe0\x08" "setSpeed")
QDEF(MP_QSTR_getSpeed, (const byte*)"\x74\x08" "getSpeed")
QDEF(MP_QSTR_UND, (const byte*)"\x3a\x03" "UND")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x06" "update")
QDEF(MP_QSTR_Cellular, (const byte*)"\xc9\x08" "Cellular")
QDEF(MP_QSTR_getInfo, (const byte*)"\xbd\x07" "getInfo")
QDEF(MP_QSTR_getStatus, (const byte*)"\x27\x09" "getStatus")
QDEF(MP_QSTR_onConnect, (const byte*)"\x3a\x09" "onConnect")
QDEF(MP_QSTR_getNeighborCellInfo, (const byte*)"\x89\x13" "getNeighborCellInfo")
QDEF(MP_QSTR_HTTP, (const byte*)"\x1d\x04" "HTTP")
QDEF(MP_QSTR_request, (const byte*)"\x74\x07" "request")
QDEF(MP_QSTR_download, (const byte*)"\x91\x08" "download")
QDEF(MP_QSTR_startDownload, (const byte*)"\xf1\x0d" "startDownload")
QDEF(MP_QSTR_addDownload, (const byte*)"\x70\x0b" "addDownload")
QDEF(MP_QSTR_IOT, (const byte*)"\xd7\x03" "IOT")
QDEF(MP_QSTR_device, (const byte*)"\x3d\x06" "device")
QDEF(MP_QSTR_sign, (const byte*)"\xd6\x04" "sign")
QDEF(MP_QSTR_postProps, (const byte*)"\x53\x09" "postProps")
QDEF(MP_QSTR_onProps, (const byte*)"\x6a\x07" "onProps")
QDEF(MP_QSTR_postEvent, (const byte*)"\x91\x09" "postEvent")
QDEF(MP_QSTR_onService, (const byte*)"\xf9\x09" "onService")
QDEF(MP_QSTR_onDisconnect, (const byte*)"\xa4\x0c" "onDisconnect")
QDEF(MP_QSTR_MQTT, (const byte*)"\x79\x04" "MQTT")
QDEF(MP_QSTR_subscribe, (const byte*)"\x0d\x09" "subscribe")
QDEF(MP_QSTR_unsubscribe, (const byte*)"\xd6\x0b" "unsubscribe")
QDEF(MP_QSTR_publish, (const byte*)"\x5c\x07" "publish")
QDEF(MP_QSTR_TCP, (const byte*)"\xc2\x03" "TCP")
QDEF(MP_QSTR_createSocket, (const byte*)"\x04\x0c" "createSocket")
QDEF(MP_QSTR_UDP, (const byte*)"\x64\x03" "UDP")
QDEF(MP_QSTR_WIFI, (const byte*)"\x74\x04" "WIFI")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x07" "connect")
QDEF(MP_QSTR_Battery, (const byte*)"\xc8\x07" "Battery")
QDEF(MP_QSTR_getConnectState, (const byte*)"\xba\x0f" "getConnectState")
QDEF(MP_QSTR_getVoltage, (const byte*)"\x91\x0a" "getVoltage")
QDEF(MP_QSTR_getTemperature, (const byte*)"\xff\x0e" "getTemperature")
QDEF(MP_QSTR_getLevel, (const byte*)"\xc5\x08" "getLevel")
QDEF(MP_QSTR_Charger, (const byte*)"\x8d\x07" "Charger")
QDEF(MP_QSTR_getCurrent, (const byte*)"\xba\x0a" "getCurrent")
QDEF(MP_QSTR_switch, (const byte*)"\xb7\x06" "switch")
QDEF(MP_QSTR_Crypto, (const byte*)"\x26\x06" "Crypto")
QDEF(MP_QSTR_md5, (const byte*)"\x19\x03" "md5")
QDEF(MP_QSTR_encrypt, (const byte*)"\xc2\x07" "encrypt")
QDEF(MP_QSTR_decrypt, (const byte*)"\xa8\x07" "decrypt")
QDEF(MP_QSTR_FS, (const byte*)"\x10\x02" "FS")
QDEF(MP_QSTR_issupport, (const byte*)"\x10\x09" "issupport")
QDEF(MP_QSTR_delete, (const byte*)"\x9c\x06" "delete")
QDEF(MP_QSTR_KV, (const byte*)"\xf8\x02" "KV")
QDEF(MP_QSTR_setStorageSync, (const byte*)"\x79\x0e" "setStorageSync")
QDEF(MP_QSTR_getStorageSync, (const byte*)"\xed\x0e" "getStorageSync")
QDEF(MP_QSTR_removeStorageSync, (const byte*)"\xbd\x11" "removeStorageSync")
QDEF(MP_QSTR_power, (const byte*)"\xda\x05" "power")
QDEF(MP_QSTR_PM, (const byte*)"\xd8\x02" "PM")
QDEF(MP_QSTR_setAutosleepMode, (const byte*)"\xa4\x10" "setAutosleepMode")
QDEF(MP_QSTR_getAutosleepMode, (const byte*)"\x30\x10" "getAutosleepMode")
QDEF(MP_QSTR_powerDown, (const byte*)"\xc8\x09" "powerDown")
QDEF(MP_QSTR_powerReset, (const byte*)"\x0f\x0a" "powerReset")
QDEF(MP_QSTR_wakelockLock, (const byte*)"\xbd\x0c" "wakelockLock")
QDEF(MP_QSTR_wakelockUnlock, (const byte*)"\x46\x0e" "wakelockUnlock")
QDEF(MP_QSTR_wakelockTimedlock, (const byte*)"\xcc\x11" "wakelockTimedlock")
QDEF(MP_QSTR_onPwrkey, (const byte*)"\xe6\x08" "onPwrkey")
QDEF(MP_QSTR_system, (const byte*)"\xa0\x06" "system")
QDEF(MP_QSTR_SystemInfo, (const byte*)"\x4e\x0a" "SystemInfo")
QDEF(MP_QSTR_versions, (const byte*)"\xec\x08" "versions")
QDEF(MP_QSTR_uptime, (const byte*)"\xd5\x06" "uptime")
QDEF(MP_QSTR_memory, (const byte*)"\x84\x06" "memory")
QDEF(MP_QSTR_memory_total, (const byte*)"\x99\x0c" "memory_total")
QDEF(MP_QSTR_memory_used, (const byte*)"\x9c\x0b" "memory_used")
QDEF(MP_QSTR_SysTimer, (const byte*)"\x5b\x08" "SysTimer")
QDEF(MP_QSTR_setTimeout, (const byte*)"\xbc\x0a" "setTimeout")
QDEF(MP_QSTR_clearTimeout, (const byte*)"\x47\x0c" "clearTimeout")
QDEF(MP_QSTR_setInterval, (const byte*)"\xd8\x0b" "setInterval")
QDEF(MP_QSTR_clearInterval, (const byte*)"\xc3\x0d" "clearInterval")
QDEF(MP_QSTR_ADC, (const byte*)"\x63\x03" "ADC")
QDEF(MP_QSTR_CAN, (const byte*)"\x89\x03" "CAN")
QDEF(MP_QSTR_receive, (const byte*)"\x4e\x07" "receive")
QDEF(MP_QSTR_DAC, (const byte*)"\x03\x03" "DAC")
QDEF(MP_QSTR_getVol, (const byte*)"\x26\x06" "getVol")
QDEF(MP_QSTR_setVol, (const byte*)"\xb2\x06" "setVol")
QDEF(MP_QSTR_GPIO, (const byte*)"\x14\x04" "GPIO")
QDEF(MP_QSTR_enableIrq, (const byte*)"\x8e\x09" "enableIrq")
QDEF(MP_QSTR_disableIrq, (const byte*)"\xbb\x0a" "disableIrq")
QDEF(MP_QSTR_clearIrq, (const byte*)"\x76\x08" "clearIrq")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\x03" "I2C")
QDEF(MP_QSTR_readReg, (const byte*)"\x67\x07" "readReg")
QDEF(MP_QSTR_writeReg, (const byte*)"\x28\x08" "writeReg")
QDEF(MP_QSTR_IR, (const byte*)"\x3e\x02" "IR")
QDEF(MP_QSTR_learn, (const byte*)"\x31\x05" "learn")
QDEF(MP_QSTR_LCD, (const byte*)"\xce\x03" "LCD")
QDEF(MP_QSTR_show, (const byte*)"\x86\x04" "show")
QDEF(MP_QSTR_fill, (const byte*)"\xca\x04" "fill")
QDEF(MP_QSTR_PWM, (const byte*)"\x4f\x03" "PWM")
QDEF(MP_QSTR_getConfig, (const byte*)"\x99\x09" "getConfig")
QDEF(MP_QSTR_setConfig, (const byte*)"\x8d\x09" "setConfig")
QDEF(MP_QSTR_RTC, (const byte*)"\xa0\x03" "RTC")
QDEF(MP_QSTR_getTime, (const byte*)"\x26\x07" "getTime")
QDEF(MP_QSTR_setTime, (const byte*)"\x32\x07" "setTime")
QDEF(MP_QSTR_SPI, (const byte*)"\xef\x03" "SPI")
QDEF(MP_QSTR_sendRecv, (const byte*)"\xbb\x08" "sendRecv")
QDEF(MP_QSTR_TIMER, (const byte*)"\xa2\x05" "TIMER")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x04" "UART")
QDEF(MP_QSTR_WDG, (const byte*)"\x71\x03" "WDG")
QDEF(MP_QSTR_feed, (const byte*)"\xa7\x04" "feed")
QDEF(MP_QSTR_gnss, (const byte*)"\x0c\x04" "gnss")
QDEF(MP_QSTR_para_chg, (const byte*)"\x94\x08" "para_chg")
QDEF(MP_QSTR_network, (const byte*)"\x5b\x07" "network")
QDEF(MP_QSTR_establish, (const byte*)"\xfa\x09" "establish")
QDEF(MP_QSTR_destroy, (const byte*)"\x47\x07" "destroy")
QDEF(MP_QSTR_get_host_by_name, (const byte*)"\x90\x10" "get_host_by_name")
QDEF(MP_QSTR_disconnect, (const byte*)"\xa5\x0a" "disconnect")
QDEF(MP_QSTR_get_system_version, (const byte*)"\xcc\x12" "get_system_version")
QDEF(MP_QSTR_get_platform_type, (const byte*)"\xd4\x11" "get_platform_type")
QDEF(MP_QSTR_get_ip, (const byte*)"\xb5\x06" "get_ip")
QDEF(MP_QSTR_get_mac_addr, (const byte*)"\x4f\x0c" "get_mac_addr")
QDEF(MP_QSTR_get_network_status, (const byte*)"\x19\x12" "get_network_status")
QDEF(MP_QSTR_get_device_name, (const byte*)"\x8c\x0f" "get_device_name")
QDEF(MP_QSTR_autosleep, (const byte*)"\x65\x09" "autosleep")
QDEF(MP_QSTR_unlock, (const byte*)"\x15\x06" "unlock")
QDEF(MP_QSTR_timedlock, (const byte*)"\x7f\x09" "timedlock")
QDEF(MP_QSTR_create, (const byte*)"\xc1\x06" "create")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x03" "map")
QDEF(MP_QSTR_match, (const byte*)"\x96\x05" "match")
QDEF(MP_QSTR_math, (const byte*)"\x35\x04" "math")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x03" "max")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x03" "mem")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x09" "mem_alloc")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x08" "mem_free")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\x08" "mem_info")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x0a" "memoryview")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x0b" "micropython")
QDEF(MP_QSTR_micros, (const byte*)"\xac\x06" "micros")
QDEF(MP_QSTR_millis, (const byte*)"\x5b\x06" "millis")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x03" "min")
QDEF(MP_QSTR_mode, (const byte*)"\x26\x04" "mode")
QDEF(MP_QSTR_modf, (const byte*)"\x25\x04" "modf")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\x07" "modules")
QDEF(MP_QSTR_mount, (const byte*)"\xa8\x05" "mount")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x0a" "namedtuple")
QDEF(MP_QSTR_next, (const byte*)"\x42\x04" "next")
QDEF(MP_QSTR_object, (const byte*)"\x90\x06" "object")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x03" "oct")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x03" "off")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x09" "opt_level")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x03" "ord")
QDEF(MP_QSTR_partition, (const byte*)"\x87\x09" "partition")
QDEF(MP_QSTR_peektime, (const byte*)"\x8b\x08" "peektime")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\x05" "phase")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x02" "pi")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x03" "pin")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x05" "polar")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x07" "popitem")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\x05" "print")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x08" "property")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x04" "pull")
QDEF(MP_QSTR_push, (const byte*)"\xbb\x04" "push")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x03" "pyb")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x09" "qstr_info")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x07" "radians")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x09" "randrange")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x05" "range")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x08" "readline")
QDEF(MP_QSTR_real, (const byte*)"\xbf\x04" "real")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\x04" "rect")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x06" "remove")
QDEF(MP_QSTR_repl_info, (const byte*)"\xbf\x09" "repl_info")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\x04" "repr")
QDEF(MP_QSTR_reset, (const byte*)"\x10\x05" "reset")
QDEF(MP_QSTR_reset_cause, (const byte*)"\xce\x0b" "reset_cause")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x07" "reverse")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x08" "reversed")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x06" "rindex")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x05" "round")
QDEF(MP_QSTR_rpartition, (const byte*)"\x15\x0a" "rpartition")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x06" "rstrip")
QDEF(MP_QSTR_search, (const byte*)"\xab\x06" "search")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x04" "seed")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x04" "seek")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x04" "send")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x03" "set")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\x0a" "setdefault")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x06" "setter")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x06" "sha256")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x03" "sin")
QDEF(MP_QSTR_single, (const byte*)"\x3f\x06" "single")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\x04" "sinh")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x06" "sizeof")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x05" "sleep")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x08" "sleep_us")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\x05" "slice")
QDEF(MP_QSTR_soft_reset, (const byte*)"\xe1\x0a" "soft_reset")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x06" "sorted")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x05" "split")
QDEF(MP_QSTR_splitlines, (const byte*)"\x6a\x0a" "splitlines")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x04" "sqrt")
QDEF(MP_QSTR_stack_use, (const byte*)"\x97\x09" "stack_use")
QDEF(MP_QSTR_stacks_analyze, (const byte*)"\x63\x0e" "stacks_analyze")
QDEF(MP_QSTR_standby, (const byte*)"\xd2\x07" "standby")
QDEF(MP_QSTR_start, (const byte*)"\x85\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\x0a" "startswith")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\x0c" "staticmethod")
QDEF(MP_QSTR_step, (const byte*)"\x57\x04" "step")
QDEF(MP_QSTR_str, (const byte*)"\x50\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x05" "strip")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x06" "struct")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\x05" "super")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x04" "sync")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x03" "tan")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\x04" "tanh")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x05" "throw")
QDEF(MP_QSTR_ticks_add, (const byte*)"\x9d\x09" "ticks_add")
QDEF(MP_QSTR_ticks_cpu, (const byte*)"\x1a\x09" "ticks_cpu")
QDEF(MP_QSTR_ticks_diff, (const byte*)"\xb1\x0a" "ticks_diff")
QDEF(MP_QSTR_ticks_ms, (const byte*)"\x42\x08" "ticks_ms")
QDEF(MP_QSTR_ticks_us, (const byte*)"\x5a\x08" "ticks_us")
QDEF(MP_QSTR_time, (const byte*)"\xf0\x04" "time")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x08" "to_bytes")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x05" "trunc")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x04" "type")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x09" "ubinascii")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x0c" "ucollections")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x07" "uctypes")
QDEF(MP_QSTR_udelay, (const byte*)"\x25\x06" "udelay")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x08" "uhashlib")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x06" "uheapq")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x03" "uio")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x05" "ujson")
QDEF(MP_QSTR_umachine, (const byte*)"\x95\x08" "umachine")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\x09" "unhexlify")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x05" "union")
QDEF(MP_QSTR_unique_id, (const byte*)"\x04\x09" "unique_id")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x05" "upper")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\x07" "urandom")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x03" "ure")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x05" "utime")
QDEF(MP_QSTR_utimeq, (const byte*)"\xf4\x06" "utimeq")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x05" "uzlib")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\x06" "values")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x03" "wfi")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\x03" "zip")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x07" "ustruct")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x0b" "unpack_from")
QDEF(MP_QSTR_exit, (const byte*)"\x85\x04" "exit")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x09" "byteorder")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0c" "version_info")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x03" "sys")
QDEF(MP_QSTR_fileno, (const byte*)"\x82\x06" "fileno")
QDEF(MP_QSTR_makefile, (const byte*)"\xc1\x08" "makefile")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x07" "usocket")
QDEF(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x0b" "getaddrinfo")
QDEF(MP_QSTR_inet_pton, (const byte*)"\xc9\x09" "inet_pton")
QDEF(MP_QSTR_inet_ntop, (const byte*)"\x89\x09" "inet_ntop")
QDEF(MP_QSTR_sockaddr, (const byte*)"\x62\x08" "sockaddr")
QDEF(MP_QSTR_MSG_DONTROUTE, (const byte*)"\xeb\x0d" "MSG_DONTROUTE")
QDEF(MP_QSTR_MSG_DONTWAIT, (const byte*)"\x99\x0c" "MSG_DONTWAIT")
QDEF(MP_QSTR_SO_BROADCAST, (const byte*)"\xf9\x0c" "SO_BROADCAST")
QDEF(MP_QSTR_AF_UNIX, (const byte*)"\xf7\x07" "AF_UNIX")
QDEF(MP_QSTR_SO_ERROR, (const byte*)"\x3e\x08" "SO_ERROR")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x03" "uos")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x04" "stat")
QDEF(MP_QSTR_statvfs, (const byte*)"\x14\x07" "statvfs")
QDEF(MP_QSTR_unlink, (const byte*)"\xfe\x06" "unlink")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\x05" "chdir")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\x06" "getcwd")
QDEF(MP_QSTR_dupterm, (const byte*)"\xaa\x07" "dupterm")
QDEF(MP_QSTR_umount, (const byte*)"\xdd\x06" "umount")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x05" "uname")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x07" "sysname")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\x0a" "unregister")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x07" "uselect")
QDEF(MP_QSTR_writeblocks, (const byte*)"\x02\x0b" "writeblocks")
QDEF(MP_QSTR_writebyte, (const byte*)"\xd2\x09" "writebyte")
QDEF(MP_QSTR_tell, (const byte*)"\x14\x04" "tell")
QDEF(MP_QSTR_rewind, (const byte *)"\xa6\x06" "rewind")
QDEF(MP_QSTR_getpos, (const byte *)"\xdf\x06" "getpos")
QDEF(MP_QSTR_setpos, (const byte *)"\x4b\x06" "setpos")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\x07" "listdir")
QDEF(MP_QSTR_ilistdir, (const byte*)"\x71\x08" "ilistdir")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\x05" "mkdir")
QDEF(MP_QSTR_VfsFat, (const byte*)"\x15\x06" "VfsFat")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x06" "rename")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\x05" "rmdir")
QDEF(MP_QSTR_mkfs, (const byte*)"\x76\x04" "mkfs")
QDEF(MP_QSTR_socket, (const byte*)"\x60\x06" "socket")
QDEF(MP_QSTR_AF_INET6, (const byte*)"\x7d\x08" "AF_INET6")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x08" "SOCK_RAW")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\x07" "AF_INET")
QDEF(MP_QSTR_bind, (const byte*)"\x84\x04" "bind")
QDEF(MP_QSTR_listen, (const byte*)"\xcc\x06" "listen")
QDEF(MP_QSTR_accept, (const byte*)"\x85\x06" "accept")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\x04" "recv")
QDEF(MP_QSTR_sendto, (const byte*)"\x22\x06" "sendto")
QDEF(MP_QSTR_recvfrom, (const byte*)"\x91\x08" "recvfrom")
QDEF(MP_QSTR_setsockopt, (const byte*)"\x38\x0a" "setsockopt")
QDEF(MP_QSTR_settimeout, (const byte*)"\xdc\x0a" "settimeout")
QDEF(MP_QSTR_setblocking, (const byte*)"\x6e\x0b" "setblocking")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x08" "calcsize")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\x09" "pack_into")
QDEF(MP_QSTR_os, (const byte*)"\x79\x02" "os")
QDEF(MP_QSTR_zlib, (const byte*)"\xf8\x04" "zlib")
QDEF(MP_QSTR_hashlib, (const byte*)"\x10\x07" "hashlib")
QDEF(MP_QSTR_binascii, (const byte*)"\x91\x08" "binascii")
QDEF(MP_QSTR_collections, (const byte*)"\xe0\x0b" "collections")
QDEF(MP_QSTR_re, (const byte*)"\xd2\x02" "re")
QDEF(MP_QSTR_json, (const byte*)"\xfd\x04" "json")
QDEF(MP_QSTR_heapq, (const byte*)"\x68\x05" "heapq")
QDEF(MP_QSTR_path, (const byte*)"\x88\x04" "path")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\x04" "argv")
QDEF(MP_QSTR_version, (const byte*)"\xbf\x07" "version")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x0e" "implementation")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x0f" "print_exception")
QDEF(MP_QSTR_uerrno, (const byte*)"\xb4\x06" "uerrno")
QDEF(MP_QSTR_errno, (const byte*)"\xc1\x05" "errno")
QDEF(MP_QSTR_errorcode, (const byte*)"\x10\x09" "errorcode")
QDEF(MP_QSTR_EPERM, (const byte*)"\xea\x05" "EPERM")
QDEF(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x07" "ENOBUFS")
QDEF(MP_QSTR_ENODEV, (const byte*)"\xb6\x06" "ENODEV")
QDEF(MP_QSTR_ENOENT, (const byte*)"\x5e\x06" "ENOENT")
QDEF(MP_QSTR_ENOMEM, (const byte*)"\xa4\x06" "ENOMEM")
QDEF(MP_QSTR_ENOTCONN, (const byte*)"\x79\x08" "ENOTCONN")
QDEF(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x0a" "EOPNOTSUPP")
QDEF(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\x09" "ETIMEDOUT")
QDEF(MP_QSTR_EIO, (const byte*)"\x86\x03" "EIO")
QDEF(MP_QSTR_EBADF, (const byte*)"\x61\x05" "EBADF")
QDEF(MP_QSTR_EAGAIN, (const byte*)"\x20\x06" "EAGAIN")
QDEF(MP_QSTR_EACCES, (const byte*)"\x37\x06" "EACCES")
QDEF(MP_QSTR_EEXIST, (const byte*)"\x53\x06" "EEXIST")
QDEF(MP_QSTR_EISDIR, (const byte*)"\xa5\x06" "EISDIR")
QDEF(MP_QSTR_EINVAL, (const byte*)"\x5c\x06" "EINVAL")
QDEF(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x0a" "EADDRINUSE")
QDEF(MP_QSTR_ECONNABORTED, (const byte*)"\x27\x0c" "ECONNABORTED")
QDEF(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x0c" "ECONNREFUSED")
QDEF(MP_QSTR_ECONNRESET, (const byte*)"\x19\x0a" "ECONNRESET")
QDEF(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x0c" "EHOSTUNREACH")
QDEF(MP_QSTR_EALREADY, (const byte*)"\x46\x08" "EALREADY")
QDEF(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\x0b" "EINPROGRESS")
QDEF(MP_QSTR_ussl, (const byte*)"\x1c\x04" "ussl")
QDEF(MP_QSTR_wrap_socket, (const byte*)"\xcb\x0b" "wrap_socket")
QDEF(MP_QSTR_getpeercert, (const byte*)"\xb1\x0b" "getpeercert")
QDEF(MP_QSTR_cert, (const byte*)"\x25\x04" "cert")
QDEF(MP_QSTR_server_side, (const byte*)"\x64\x0b" "server_side")
QDEF(MP_QSTR_server_hostname, (const byte*)"\x58\x0f" "server_hostname")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x09" "readlines")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x06" "decode")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\x07" "delattr")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x06" "FileIO")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x0d" "TextIOWrapper")
QDEF(MP_QSTR_io, (const byte*)"\x23\x02" "io")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x06" "stdout")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x06" "stderr")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x08" "platform")
QDEF(MP_QSTR_deque, (const byte*)"\x05\x05" "deque")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x06" "select")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\x04" "poll")
QDEF(MP_QSTR_POLLERR, (const byte*)"\xdf\x07" "POLLERR")
QDEF(MP_QSTR_POLLHUP, (const byte*)"\x77\x07" "POLLHUP")
QDEF(MP_QSTR_POLLIN, (const byte*)"\x7d\x06" "POLLIN")
QDEF(MP_QSTR_POLLOUT, (const byte*)"\x74\x07" "POLLOUT")
QDEF(MP_QSTR_ipoll, (const byte*)"\x53\x05" "ipoll")
QDEF(MP_QSTR_register, (const byte*)"\xac\x08" "register")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x06" "modify")
QDEF(MP_QSTR_SOL_SOCKET, (const byte*)"\x0f\x0a" "SOL_SOCKET")
QDEF(MP_QSTR_SO_REUSEADDR, (const byte*)"\x21\x0c" "SO_REUSEADDR")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x0a" "pend_throw")
QDEF(MP_QSTR__space_, (const byte*)"\xe1\x07" "_space_")
QDEF(MP_QSTR_encode, (const byte*)"\x43\x06" "encode")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\x08" "nodename")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x04" "file")
QDEF(MP_QSTR_r, (const byte*)"\xd7\x01" "r")
QDEF(MP_QSTR_buffering, (const byte*)"\x25\x09" "buffering")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x08" "encoding")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x08" "__dict__")
QDEF(MP_QSTR_release, (const byte*)"\xec\x07" "release")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x08" "iterable")
QDEF(MP_QSTR_quit, (const byte*)"\x5c\x04" "quit")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x04" "addr")
QDEF(MP_QSTR_addrsize, (const byte*)"\x93\x08" "addrsize")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\x07" "memaddr")
QDEF(MP_QSTR_readfrom_into, (const byte*)"\x82\x0d" "readfrom_into")
QDEF(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x0c" "readfrom_mem")
QDEF(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x11" "readfrom_mem_into")
QDEF(MP_QSTR_readfrom, (const byte*)"\x41\x08" "readfrom")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x04" "scan")
QDEF(MP_QSTR_sck, (const byte*)"\xfe\x03" "sck")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x03" "scl")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x03" "sda")
QDEF(MP_QSTR_arg, (const byte*)"\x91\x03" "arg")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x07" "timeout")
QDEF(MP_QSTR_writeto_mem, (const byte*)"\x79\x0b" "writeto_mem")
QDEF(MP_QSTR_writeto, (const byte*)"\x03\x07" "writeto")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x06" "deinit")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x08" "firstbit")
QDEF(MP_QSTR_mosi, (const byte*)"\x1d\x04" "mosi")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\x08" "polarity")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\x08" "baudrate")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x04" "bits")
QDEF(MP_QSTR_miso, (const byte*)"\x9d\x04" "miso")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\x03" "MSB")
QDEF(MP_QSTR_SoftSPI, (const byte*)"\x21\x07" "SoftSPI")
QDEF(MP_QSTR_write_readinto, (const byte*)"\x89\x0e" "write_readinto")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\x03" "LSB")
QDEF(MP_QSTR__thread, (const byte*)"\xd4\x07" "_thread")
QDEF(MP_QSTR_acquire, (const byte*)"\x1d\x07" "acquire")
QDEF(MP_QSTR_locked, (const byte*)"\x0f\x06" "locked")
QDEF(MP_QSTR_lock, (const byte*)"\xae\x04" "lock")
QDEF(MP_QSTR_LockType, (const byte*)"\x36\x08" "LockType")
QDEF(MP_QSTR_get_ident, (const byte*)"\xfe\x09" "get_ident")
QDEF(MP_QSTR_stack_size, (const byte*)"\x31\x0a" "stack_size")
QDEF(MP_QSTR_start_new_thread, (const byte*)"\xd7\x10" "start_new_thread")
QDEF(MP_QSTR_allocate_lock, (const byte*)"\xec\x0d" "allocate_lock")
QDEF(MP_QSTR_writechar, (const byte*)"\x40\x09" "writechar")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x08" "readchar")
QDEF(MP_QSTR_sendbreak, (const byte*)"\xc6\x09" "sendbreak")
QDEF(MP_QSTR_RTS, (const byte*)"\xb0\x03" "RTS")
QDEF(MP_QSTR_CTS, (const byte*)"\x61\x03" "CTS")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x06" "parity")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x04" "flow")
QDEF(MP_QSTR_timeout_char, (const byte*)"\x79\x0c" "timeout_char")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x0c" "read_buf_len")
QDEF(MP_QSTR_mktime, (const byte*)"\x96\x06" "mktime")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x09" "localtime")
QDEF(MP_QSTR_IPPROTO_IP, (const byte*)"\x0c\x0a" "IPPROTO_IP")
QDEF(MP_QSTR_IPPROTO_ICMP, (const byte*)"\xa2\x0c" "IPPROTO_ICMP")
QDEF(MP_QSTR_IPPROTO_IPV4, (const byte*)"\x2e\x0c" "IPPROTO_IPV4")
QDEF(MP_QSTR_IPPROTO_TCP, (const byte*)"\xb2\x0b" "IPPROTO_TCP")
QDEF(MP_QSTR_IPPROTO_UDP, (const byte*)"\x54\x0b" "IPPROTO_UDP")
QDEF(MP_QSTR_IPPROTO_IPV6, (const byte*)"\x2c\x0c" "IPPROTO_IPV6")
QDEF(MP_QSTR_IPPROTO_RAW, (const byte*)"\xf1\x0b" "IPPROTO_RAW")
QDEF(MP_QSTR_websocket, (const byte*)"\x90\x09" "websocket")
QDEF(MP_QSTR__webrepl, (const byte*)"\x21\x08" "_webrepl")
QDEF(MP_QSTR_ioctl, (const byte*)"\x78\x05" "ioctl")
QDEF(MP_QSTR_password, (const byte*)"\x9a\x08" "password")
QDEF(MP_QSTR_rb, (const byte*)"\xd5\x02" "rb")
QDEF(MP_QSTR_wb, (const byte*)"\x70\x02" "wb")
QDEF(MP_QSTR_IP_ADD_MEMBERSHIP, (const byte*)"\x6f\x11" "IP_ADD_MEMBERSHIP")
QDEF(MP_QSTR_sendall, (const byte*)"\x38\x07" "sendall")
QDEF(MP_QSTR_sha1, (const byte*)"\x8e\x04" "sha1")
QDEF(MP_QSTR_ipc, (const byte*)"\xdf\x03" "ipc")
QDEF(MP_QSTR_sdcard, (const byte*)"\xc6\x06" "sdcard")
QDEF(MP_QSTR__linkkit, (const byte*)"\x2c\x08" "_linkkit")
QDEF(MP_QSTR_register_dyn_dev, (const byte*)"\xa8\x10" "register_dyn_dev")
QDEF(MP_QSTR_netmgr, (const byte*)"\xa2\x06" "netmgr")
QDEF(MP_QSTR_connect_wifi, (const byte*)"\x55\x0c" "connect_wifi")
QDEF(MP_QSTR_get_info, (const byte*)"\x62\x08" "get_info")
QDEF(MP_QSTR_get_type, (const byte*)"\x54\x08" "get_type")
QDEF(MP_QSTR_get_status, (const byte*)"\xf8\x0a" "get_status")
QDEF(MP_QSTR_get_wifi_ssid, (const byte*)"\x0f\x0d" "get_wifi_ssid")
QDEF(MP_QSTR_get_wifi_passwd, (const byte*)"\x40\x0f" "get_wifi_passwd")
QDEF(MP_QSTR_register_call_back, (const byte*)"\x45\x12" "register_call_back")
QDEF(MP_QSTR_post_property, (const byte*)"\xc5\x0d" "post_property")
QDEF(MP_QSTR_post_event, (const byte*)"\xae\x0a" "post_event")
QDEF(MP_QSTR_do_yield, (const byte*)"\xac\x08" "do_yield")
QDEF(MP_QSTR_getType, (const byte*)"\xcb\x07" "getType")
QDEF(MP_QSTR_ON_CONNECT, (const byte*)"\x05\x0a" "ON_CONNECT")
QDEF(MP_QSTR_ON_DISCONNECT, (const byte*)"\x9b\x0d" "ON_DISCONNECT")
QDEF(MP_QSTR_ON_SERVICE, (const byte*)"\x46\x0a" "ON_SERVICE")
QDEF(MP_QSTR_ON_PROPS, (const byte*)"\x55\x08" "ON_PROPS")
QDEF(MP_QSTR_ON_CLOSE, (const byte*)"\x2d\x08" "ON_CLOSE")
QDEF(MP_QSTR_ON_ERROR, (const byte*)"\x63\x08" "ON_ERROR")
QDEF(MP_QSTR_create_device, (const byte*)"\x86\x0d" "create_device")
QDEF(MP_QSTR_on_props, (const byte*)"\xb5\x08" "on_props")
QDEF(MP_QSTR_on_service, (const byte*)"\x26\x0a" "on_service")
QDEF(MP_QSTR_http, (const byte*)"\x9d\x04" "http")
QDEF(MP_QSTR_tcp, (const byte*)"\xa2\x03" "tcp")
QDEF(MP_QSTR_udp, (const byte*)"\x44\x03" "udp")
QDEF(MP_QSTR_wifi, (const byte*)"\x34\x04" "wifi")
QDEF(MP_QSTR_client, (const byte*)"\x9c\x06" "client")
QDEF(MP_QSTR_set_header, (const byte*)"\xc7\x0a" "set_header")
QDEF(MP_QSTR_put, (const byte*)"\x74\x03" "put")
QDEF(MP_QSTR_post, (const byte*)"\x3d\x04" "post")
QDEF(MP_QSTR_ONE_SHOT, (const byte *)"\x5e\x08" "ONE_SHOT")
QDEF(MP_QSTR_PERIODIC, (const byte *)"\x0a\x08" "PERIODIC")
QDEF(MP_QSTR_period, (const byte *)"\xa0\x06" "period")
QDEF(MP_QSTR_callback, (const byte *)"\x4c\x08" "callback")
QDEF(MP_QSTR_autorun, (const byte *)"\xe3\x07" "autorun")
QDEF(MP_QSTR_schedule, (const byte *)"\xe0\x08" "schedule")
QDEF(MP_QSTR_conn, (const byte*)"\x29\x04" "conn")
QDEF(MP_QSTR_header, (const byte*)"\x9a\x06" "header")
QDEF(MP_QSTR_get_response_code, (const byte*)"\xbd\x11" "get_response_code")
QDEF(MP_QSTR_get_response_heade, (const byte*)"\xdd\x12" "get_response_heade")
QDEF(MP_QSTR_add_text, (const byte*)"\x06\x08" "add_text")
QDEF(MP_QSTR_add_file, (const byte*)"\xdd\x08" "add_file")
QDEF(MP_QSTR_prepare, (const byte*)"\xc4\x07" "prepare")
QDEF(MP_QSTR_unprepare, (const byte*)"\x1f\x09" "unprepare")
QDEF(MP_QSTR_get_response_header, (const byte*)"\x0f\x13" "get_response_header")
QDEF(MP_QSTR_mqtt, (const byte*)"\x39\x04" "mqtt")
QDEF(MP_QSTR_username_pw_set, (const byte*)"\x36\x0f" "username_pw_set")
QDEF(MP_QSTR_loop, (const byte*)"\x39\x04" "loop")
QDEF(MP_QSTR_on_subcribe, (const byte*)"\xc0\x0b" "on_subcribe")
QDEF(MP_QSTR_readonly, (const byte*)"\x03\x08" "readonly")
QDEF(MP_QSTR_set_sink, (const byte *)"\xa7\x08"  "set_sink")
QDEF(MP_QSTR_clr_sink, (const byte *)"\xb8\x08" "clr_sink")
QDEF(MP_QSTR_get_stream, (const byte *)"\x90\x0a" "get_stream")
QDEF(MP_QSTR_ns_enable, (const byte *)"\x06\x09" "ns_enable")
QDEF(MP_QSTR_ec_enable, (const byte *)"\x5d\x09" "ec_enable")
QDEF(MP_QSTR_agc_enable, (const byte *)"\xbe\x0a" "agc_enable")
QDEF(MP_QSTR_vad_enable, (const byte *)"\xe8\x0a" "vad_enable")
QDEF(MP_QSTR_CB_ENUM_URL, (const byte *)"\x9c\x0b" "CB_ENUM_URL")
QDEF(MP_QSTR_CB_ENUM_DATA, (const byte *)"\x67\x0c" "CB_ENUM_DATA")
QDEF(MP_QSTR_CB_ENUM_EVENT, (const byte *)"\x1b\x0d" "CB_ENUM_EVENT")
QDEF(MP_QSTR_OSS, (const byte*)"\xca\x03" "OSS")
QDEF(MP_QSTR_uploadFile, (const byte*)"\xa0\x0a" "uploadFile")
QDEF(MP_QSTR_uploadContent, (const byte*)"\x6f\x0d" "uploadContent")
QDEF(MP_QSTR_set_data, (const byte*)"\x48\x08" "set_data")
QDEF(MP_QSTR_get_response, (const byte*)"\xef\x0c" "get_response")
QDEF(MP_QSTR_uarray, (const byte*)"\x89\x06" "uarray")
QDEF(MP_QSTR_usys, (const byte*)"\xc9\x04" "usys")
QDEF(MP_QSTR_HTTPConnection, (const byte*)"\xcb\x0e" "HTTPConnection")
QDEF(MP_QSTR_ble_netconfig, (const byte*)"\x64\x0d" "ble_netconfig")
QDEF(MP_QSTR_notificate, (const byte*)"\xa5\x0a" "notificate")
QDEF(MP_QSTR_native, (const byte*)"\x84\x06" "native")
QDEF(MP_QSTR_viper, (const byte*)"\x5d\x05" "viper")
QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x09" "__aiter__")
QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\x12" "StopAsyncIteration")
QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x0a" "__aenter__")
QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\x09" "__aexit__")
QDEF(MP_QSTR___anext__, (const byte*)"\x83\x09" "__anext__")
QDEF(MP_QSTR_uint, (const byte*)"\xe3\x04" "uint")
QDEF(MP_QSTR_ptr, (const byte*)"\x53\x03" "ptr")
QDEF(MP_QSTR_ptr8, (const byte*)"\x8b\x04" "ptr8")
QDEF(MP_QSTR_ptr16, (const byte*)"\xf4\x05" "ptr16")
QDEF(MP_QSTR_ptr32, (const byte*)"\xb2\x05" "ptr32")
QDEF(MP_QSTR_None, (const byte*)"\x6f\x04" "None")
QDEF(MP_QSTR___dir__, (const byte*)"\x7a\x07" "__dir__")
QDEF(MP_QSTR_NotImplemented, (const byte*)"\x3e\x0e" "NotImplemented")
QDEF(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x0e" "ViperTypeError")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x09" "threshold")
QDEF(MP_QSTR_BufferedWriter, (const byte*)"\xeb\x0e" "BufferedWriter")
QDEF(MP_QSTR_IOBase, (const byte*)"\x36\x06" "IOBase")
QDEF(MP_QSTR_rel_tol, (const byte*)"\x56\x07" "rel_tol")
QDEF(MP_QSTR_abs_tol, (const byte*)"\x7d\x07" "abs_tol")
QDEF(MP_QSTR_isclose, (const byte*)"\x49\x07" "isclose")
QDEF(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x1d" "alloc_emergency_exception_buf")
QDEF(MP_QSTR_mpy, (const byte*)"\xc1\x03" "mpy")
QDEF(MP_QSTR_maxsize, (const byte*)"\xd4\x07" "maxsize")
QDEF(MP_QSTR_popleft, (const byte*)"\x71\x07" "popleft")
QDEF(MP_QSTR___globals__, (const byte*)"\x9d\x0b" "__globals__")
QDEF(MP_QSTR__uasyncio, (const byte*)"\xcf\x09" "_uasyncio")
QDEF(MP_QSTR_ucryptolib, (const byte*)"\x34\x0a" "ucryptolib")
QDEF(MP_QSTR_uwebsocket, (const byte*)"\xe5\x0a" "uwebsocket")
QDEF(MP_QSTR_framebuf, (const byte*)"\x69\x08" "framebuf")
QDEF(MP_QSTR_btree, (const byte*)"\xe1\x05" "btree")
QDEF(MP_QSTR_ubluetooth, (const byte*)"\xe6\x0a" "ubluetooth")
QDEF(MP_QSTR___setattr__, (const byte*)"\x54\x0b" "__setattr__")
QDEF(MP_QSTR___delattr__, (const byte*)"\x5b\x0b" "__delattr__")
QDEF(MP_QSTR_indices, (const byte*)"\x5a\x07" "indices")
QDEF(MP_QSTR___matmul__, (const byte*)"\x49\x0a" "__matmul__")
QDEF(MP_QSTR___get__, (const byte*)"\xb3\x07" "__get__")
QDEF(MP_QSTR___delete__, (const byte*)"\xdc\x0a" "__delete__")
QDEF(MP_QSTR___set__, (const byte*)"\xa7\x07" "__set__")
QDEF(MP_QSTR___bases__, (const byte*)"\x03\x09" "__bases__")
QDEF(MP_QSTR_writevto, (const byte*)"\x75\x08" "writevto")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x04" "freq")
QDEF(MP_QSTR_SoftI2C, (const byte*)"\x13\x07" "SoftI2C")
QDEF(MP_QSTR_crc32, (const byte*)"\x76\x05" "crc32")
QDEF(MP_QSTR_SHORT, (const byte*)"\xf7\x05" "SHORT")
QDEF(MP_QSTR_USHORT, (const byte*)"\xa2\x06" "USHORT")
QDEF(MP_QSTR_INT, (const byte*)"\x36\x03" "INT")
QDEF(MP_QSTR_UINT, (const byte*)"\x23\x04" "UINT")
QDEF(MP_QSTR_LONG, (const byte*)"\x0f\x04" "LONG")
QDEF(MP_QSTR_ULONG, (const byte*)"\x7a\x05" "ULONG")
QDEF(MP_QSTR_LONGLONG, (const byte*)"\x85\x08" "LONGLONG")
QDEF(MP_QSTR_ULONGLONG, (const byte*)"\x70\x09" "ULONGLONG")
QDEF(MP_QSTR_sub, (const byte*)"\x21\x03" "sub")
QDEF(MP_QSTR_do_handshake, (const byte*)"\x86\x0c" "do_handshake")
QDEF(MP_QSTR_peek, (const byte*)"\x7e\x04" "peek")
QDEF(MP_QSTR_push_sorted, (const byte*)"\x1f\x0b" "push_sorted")
QDEF(MP_QSTR_push_head, (const byte*)"\x6c\x09" "push_head")
QDEF(MP_QSTR_pop_head, (const byte*)"\x1d\x08" "pop_head")
QDEF(MP_QSTR_TaskQueue, (const byte*)"\x99\x09" "TaskQueue")
QDEF(MP_QSTR_cur_task, (const byte*)"\xf3\x08" "cur_task")
QDEF(MP_QSTR__task_queue, (const byte*)"\xd9\x0b" "_task_queue")
QDEF(MP_QSTR_CancelledError, (const byte*)"\xf6\x0e" "CancelledError")
QDEF(MP_QSTR__exc_context, (const byte*)"\x24\x0c" "_exc_context")
QDEF(MP_QSTR_exception, (const byte*)"\xd2\x09" "exception")
QDEF(MP_QSTR_Loop, (const byte*)"\x19\x04" "Loop")
QDEF(MP_QSTR_call_exception_handler, (const byte*)"\xe8\x16" "call_exception_handler")
QDEF(MP_QSTR_coro, (const byte*)"\xb4\x04" "coro")
QDEF(MP_QSTR_data, (const byte*)"\x15\x04" "data")
QDEF(MP_QSTR_waiting, (const byte*)"\xee\x07" "waiting")
QDEF(MP_QSTR_done, (const byte*)"\x45\x04" "done")
QDEF(MP_QSTR_cancel, (const byte*)"\x03\x06" "cancel")
QDEF(MP_QSTR_ph_key, (const byte*)"\xf5\x06" "ph_key")
QDEF(MP_QSTR_Task, (const byte*)"\x08\x04" "Task")
QDEF(MP_QSTR_future, (const byte*)"\x01\x06" "future")
QDEF(MP_QSTR_aes, (const byte*)"\x32\x03" "aes")
QDEF(MP_QSTR_UUID, (const byte*)"\xc8\x04" "UUID")
QDEF(MP_QSTR_gap_name, (const byte*)"\x2b\x08" "gap_name")
QDEF(MP_QSTR_mac, (const byte*)"\xaa\x03" "mac")
QDEF(MP_QSTR_rxbuf, (const byte*)"\x7e\x05" "rxbuf")
QDEF(MP_QSTR_mtu, (const byte*)"\x49\x03" "mtu")
QDEF(MP_QSTR_addr_mode, (const byte*)"\x4a\x09" "addr_mode")
QDEF(MP_QSTR_interval_us, (const byte*)"\xa3\x0b" "interval_us")
QDEF(MP_QSTR_adv_data, (const byte*)"\x59\x08" "adv_data")
QDEF(MP_QSTR_resp_data, (const byte*)"\x5e\x09" "resp_data")
QDEF(MP_QSTR_connectable, (const byte*)"\x71\x0b" "connectable")
QDEF(MP_QSTR_active, (const byte*)"\x69\x06" "active")
QDEF(MP_QSTR_irq, (const byte*)"\x8f\x03" "irq")
QDEF(MP_QSTR_gap_advertise, (const byte*)"\x23\x0d" "gap_advertise")
QDEF(MP_QSTR_gap_connect, (const byte*)"\x32\x0b" "gap_connect")
QDEF(MP_QSTR_gap_scan, (const byte*)"\xd3\x08" "gap_scan")
QDEF(MP_QSTR_gap_disconnect, (const byte*)"\xac\x0e" "gap_disconnect")
QDEF(MP_QSTR_gatts_register_services, (const byte*)"\xf7\x17" "gatts_register_services")
QDEF(MP_QSTR_gatts_read, (const byte*)"\x9d\x0a" "gatts_read")
QDEF(MP_QSTR_gatts_write, (const byte*)"\x72\x0b" "gatts_write")
QDEF(MP_QSTR_gatts_notify, (const byte*)"\x6c\x0c" "gatts_notify")
QDEF(MP_QSTR_gatts_indicate, (const byte*)"\x76\x0e" "gatts_indicate")
QDEF(MP_QSTR_gatts_set_buffer, (const byte*)"\x92\x10" "gatts_set_buffer")
QDEF(MP_QSTR_gattc_discover_services, (const byte*)"\x7d\x17" "gattc_discover_services")
QDEF(MP_QSTR_gattc_discover_characteristics, (const byte*)"\x5d\x1e" "gattc_discover_characteristics")
QDEF(MP_QSTR_gattc_discover_descriptors, (const byte*)"\xb3\x1a" "gattc_discover_descriptors")
QDEF(MP_QSTR_gattc_read, (const byte*)"\x8d\x0a" "gattc_read")
QDEF(MP_QSTR_gattc_write, (const byte*)"\x62\x0b" "gattc_write")
QDEF(MP_QSTR_gattc_exchange_mtu, (const byte*)"\x77\x12" "gattc_exchange_mtu")
QDEF(MP_QSTR_l2cap_listen, (const byte*)"\x5f\x0c" "l2cap_listen")
QDEF(MP_QSTR_l2cap_connect, (const byte*)"\xa8\x0d" "l2cap_connect")
QDEF(MP_QSTR_l2cap_disconnect, (const byte*)"\x76\x10" "l2cap_disconnect")
QDEF(MP_QSTR_l2cap_send, (const byte*)"\x6a\x0a" "l2cap_send")
QDEF(MP_QSTR_l2cap_recvinto, (const byte*)"\x88\x0e" "l2cap_recvinto")
QDEF(MP_QSTR_hci_cmd, (const byte*)"\x52\x07" "hci_cmd")
QDEF(MP_QSTR_BLE, (const byte*)"\xae\x03" "BLE")
QDEF(MP_QSTR_FLAG_READ, (const byte*)"\x64\x09" "FLAG_READ")
QDEF(MP_QSTR_FLAG_WRITE, (const byte*)"\x8b\x0a" "FLAG_WRITE")
QDEF(MP_QSTR_FLAG_NOTIFY, (const byte*)"\xd5\x0b" "FLAG_NOTIFY")
QDEF(MP_QSTR_FLAG_INDICATE, (const byte*)"\xcf\x0d" "FLAG_INDICATE")
QDEF(MP_QSTR_FLAG_WRITE_NO_RESPONSE, (const byte*)"\xa9\x16" "FLAG_WRITE_NO_RESPONSE")
QDEF(MP_QSTR_buffer, (const byte*)"\xe5\x06" "buffer")
QDEF(MP_QSTR_time_ns, (const byte*)"\x72\x07" "time_ns")
QDEF(MP_QSTR_gmtime, (const byte*)"\x5a\x06" "gmtime")
QDEF(MP_QSTR_atexit, (const byte*)"\xb0\x06" "atexit")
QDEF(MP_QSTR_dupterm_notify, (const byte*)"\xb6\x0e" "dupterm_notify")
QDEF(MP_QSTR_getenv, (const byte*)"\xae\x06" "getenv")
QDEF(MP_QSTR_putenv, (const byte*)"\xc9\x06" "putenv")
QDEF(MP_QSTR_unsetenv, (const byte*)"\x81\x08" "unsetenv")
QDEF(MP_QSTR_VfsPosix, (const byte*)"\xbb\x08" "VfsPosix")
QDEF(MP_QSTR_sntp, (const byte*)"\x7c\x04" "sntp")
QDEF(MP_QSTR_settime, (const byte*)"\x12\x07" "settime")
QDEF(MP_QSTR_modbus, (const byte*)"\xc7\x06" "modbus")
QDEF(MP_QSTR_PARITY_NONE, (const byte*)"\x97\x0b" "PARITY_NONE")
QDEF(MP_QSTR_PARITY_ODD, (const byte*)"\x32\x0a" "PARITY_ODD")
QDEF(MP_QSTR_PARITY_EVEN, (const byte*)"\x05\x0b" "PARITY_EVEN")
QDEF(MP_QSTR_FrameBuffer, (const byte*)"\xd8\x0b" "FrameBuffer")
QDEF(MP_QSTR_FrameBuffer1, (const byte*)"\xe9\x0c" "FrameBuffer1")
QDEF(MP_QSTR_MVLSB, (const byte*)"\x03\x05" "MVLSB")
QDEF(MP_QSTR_MONO_VLSB, (const byte*)"\x12\x09" "MONO_VLSB")
QDEF(MP_QSTR_RGB565, (const byte*)"\x64\x06" "RGB565")
QDEF(MP_QSTR_GS2_HMSB, (const byte*)"\x28\x08" "GS2_HMSB")
QDEF(MP_QSTR_GS4_HMSB, (const byte*)"\x6e\x08" "GS4_HMSB")
QDEF(MP_QSTR_GS8, (const byte*)"\xa9\x03" "GS8")
QDEF(MP_QSTR_MONO_HLSB, (const byte*)"\x4c\x09" "MONO_HLSB")
QDEF(MP_QSTR_MONO_HMSB, (const byte*)"\xcd\x09" "MONO_HMSB")
QDEF(MP_QSTR_fill_rect, (const byte*)"\x35\x09" "fill_rect")
QDEF(MP_QSTR_pixel, (const byte*)"\x4d\x05" "pixel")
QDEF(MP_QSTR_hline, (const byte*)"\x83\x05" "hline")
QDEF(MP_QSTR_vline, (const byte*)"\x1d\x05" "vline")
QDEF(MP_QSTR_line, (const byte*)"\xcb\x04" "line")
QDEF(MP_QSTR_blit, (const byte*)"\xf6\x04" "blit")
QDEF(MP_QSTR_scroll, (const byte*)"\x28\x06" "scroll")
QDEF(MP_QSTR_setBaudRate, (const byte*)"\x57\x0b" "setBaudRate")
QDEF(MP_QSTR_run, (const byte*)"\x6c\x03" "run")
QDEF(MP_QSTR_recovery_wifi, (const byte*)"\x88\x0d" "recovery_wifi")
QDEF(MP_QSTR_recovery_devinfo, (const byte*)"\xa0\x10" "recovery_devinfo")
// This file was automatically generated by makeqstrdata.py
