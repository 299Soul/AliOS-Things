// Automatically generated by makemoduledefs.py.

#if (MICROPY_PY_ARRAY)
extern const struct _mp_obj_module_t mp_module_uarray;
#define MODULE_DEF_MP_QSTR_UARRAY { MP_ROM_QSTR(MP_QSTR_uarray), MP_ROM_PTR(&mp_module_uarray) },
#else
#define MODULE_DEF_MP_QSTR_UARRAY
#endif

#if (MICROPY_PY_HTTP)
extern const struct _mp_obj_module_t mp_module_http;
#define MODULE_DEF_MP_QSTR_HTTP { MP_ROM_QSTR(MP_QSTR_http), MP_ROM_PTR(&mp_module_http) },
#else
#define MODULE_DEF_MP_QSTR_HTTP
#endif

#if (MICROPY_PY_MODBUS)
extern const struct _mp_obj_module_t mp_module_modbus;
#define MODULE_DEF_MP_QSTR_MODBUS { MP_ROM_QSTR(MP_QSTR_modbus), MP_ROM_PTR(&mp_module_modbus) },
#else
#define MODULE_DEF_MP_QSTR_MODBUS
#endif

#if (MICROPY_PY_KV)
extern const struct _mp_obj_module_t mp_module_kv;
#define MODULE_DEF_MP_QSTR_KV { MP_ROM_QSTR(MP_QSTR_kv), MP_ROM_PTR(&mp_module_kv) },
#else
#define MODULE_DEF_MP_QSTR_KV
#endif

#if (MICROPY_PY_ALIYUNIOT)
extern const struct _mp_obj_module_t mp_module_aliyunIoT;
#define MODULE_DEF_MP_QSTR_ALIYUNIOT { MP_ROM_QSTR(MP_QSTR_aliyunIoT), MP_ROM_PTR(&mp_module_aliyunIoT) },
#else
#define MODULE_DEF_MP_QSTR_ALIYUNIOT
#endif

#if (MICROPY_PY_OTA)
extern const struct _mp_obj_module_t mp_module_ota;
#define MODULE_DEF_MP_QSTR_OTA { MP_ROM_QSTR(MP_QSTR_ota), MP_ROM_PTR(&mp_module_ota) },
#else
#define MODULE_DEF_MP_QSTR_OTA
#endif

#if MICROPY_PY_OSS
extern const struct _mp_obj_module_t oss_module;
#define MODULE_DEF_MP_QSTR_OSS { MP_ROM_QSTR(MP_QSTR_oss), MP_ROM_PTR(&oss_module) },
#else
#define MODULE_DEF_MP_QSTR_OSS
#endif

#if MICROPY_PY_UCLOUD_AI
extern const struct _mp_obj_module_t ucloud_ai_module;
#define MODULE_DEF_MP_QSTR_UCLOUD_AI { MP_ROM_QSTR(MP_QSTR_ucloud_ai), MP_ROM_PTR(&ucloud_ai_module) },
#else
#define MODULE_DEF_MP_QSTR_UCLOUD_AI
#endif

#if MICROPY_PY_MINICV
extern const struct _mp_obj_module_t minicv_module;
#define MODULE_DEF_MP_QSTR_MINICV { MP_ROM_QSTR(MP_QSTR_minicv), MP_ROM_PTR(&minicv_module) },
#else
#define MODULE_DEF_MP_QSTR_MINICV
#endif

#if MICROPY_PY_DRIVER
extern const struct _mp_obj_module_t driver_module;
#define MICROPY_PY_HAAS_DRIVER_DEF { MP_ROM_QSTR(MP_QSTR_driver), MP_ROM_PTR(&driver_module) },
#else
#define MICROPY_PY_HAAS_DRIVER_DEF
#endif

#if PY_BUILD_BLE
extern const struct _mp_obj_module_t mp_module_ble;
#define MODULE_DEF_MP_QSTR_BLE { MP_ROM_QSTR(MP_QSTR_ble), MP_ROM_PTR(&mp_module_ble) },
#else
#define MODULE_DEF_MP_QSTR_BLE
#endif

#define MICROPY_REGISTERED_MODULES \
    MODULE_DEF_MP_QSTR_UARRAY      \
    MODULE_DEF_MP_QSTR_HTTP        \
    MODULE_DEF_MP_QSTR_MODBUS      \
    MODULE_DEF_MP_QSTR_KV          \
    MODULE_DEF_MP_QSTR_ALIYUNIOT   \
    MODULE_DEF_MP_QSTR_OTA         \
    MODULE_DEF_MP_QSTR_OSS         \
    MODULE_DEF_MP_QSTR_UCLOUD_AI   \
    MODULE_DEF_MP_QSTR_MINICV      \
    MICROPY_PY_HAAS_DRIVER_DEF     \
    MODULE_DEF_MP_QSTR_BLE         \
    // MICROPY_REGISTERED_MODULES
