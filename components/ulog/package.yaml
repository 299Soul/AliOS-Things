
## 第一部分： 基础信息
name: ulog                                         # <必选项> 包名称 （符合C语言变量命名规则），长度少于等于64字节
version: rel_3.3.0                                     # <必选项> 组件版本号
description: sys log output,support async output.   # <必选项> 建议至少20字以上
type: common                                        # <必选项> 组件类型，为：solution, chip, board, common, sdk

tag: 核心模块                                       # <可选项> 组件分类，缺省值： ''
keywords:                                           # <可选项> 标签，会影响到组件被搜索的效果，合理的标签很重要
  - syslog
license: Apache license v2.0                        # <可选项> 源代码的许可证，要确保所有代码、文件的许可证不冲突。如：MIT，Apache license v2.0，BSD

## 第二部分：依赖信息
#           指定该组件依赖的组件及版本，版本支持条件比较，支持：>=v1.0, >v1.0, ==v1.0, <=v1.0, <v1.0, v1.0
#           未指定条件时，默认为 ==，如 v1.0 与 ==v1.0
# depends:                                 # <可选项> 该组件依赖其他的组件，合理的依赖才能保证组件能编译、使用
#   - uagent: rel_3.3.0

## 第四部分：编译连接信息
# build_config:                            # <可选项> 编译配置项
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
build_config:
    #cflag: -g -O0
  define:
    #- ULOG_CONFIG_ASYNC
    #- ULOG_CONFIG_POP_FS
    #- ULOG_CONFIG_POP_UDP
  internal_include:
    - .
    - internal
  include:
    - include

# source_file:                             # <可选项> 指定参与编译的源代码文件，支持通配符，采用相对路径
#   - src/*.c                              # 例：组件 src 目录下所有的扩展名为 c 的源代码文件
source_file:
  - src/ulog_async.c? <ULOG_CONFIG_ASYNC>
  - src/ulog.c
  - src/ulog_fs_cfg.c? <ULOG_CONFIG_POP_FS>
  - src/ulog_init.c
  - src/ulog_ring_fifo.c
  - src/ulog_session_file.c? <ULOG_CONFIG_POP_FS>
  - src/ulog_session_udp.c? <ULOG_CONFIG_POP_UDP>
  - src/ulog_utility.c
#  - "example/*.c"

## 第五部分：配置信息
def_config:                              # 组件的可配置项
    AOS_COMP_ULOG: y 
    ULOG_CONFIG_ASYNC: 0                 # ulog异步配置项，1表示开启异步打印，0表示同步打印
    ULOG_CONFIG_POP_UDP: 0               # ulog日志UDP输出，1表示开启，0表示关闭
    ULOG_CONFIG_POP_FS: 0                # ulog日志存入文件系统，1表示开启，0表示关闭
    ULOG_CONFIG_UPLOAD: 0                # ulog本地日志上传到服务端，1表示开启，0表示关闭
    #ULOG_CONFIG_POP_CLOUD: 0             # ulog日志实时上传到服务端，1表示开启，0表示关闭
    ULOG_CONFIG_STOP_FILTER_CLOUD: 0     # ulog日志实时上传到服务端过滤等级， 详细等级参考ulog.h中 LOG_EMERG - LOG_NONE
    ULOG_CONFIG_STOP_FILTER_UDP: 4       # ulog日志UDP过滤等级， 详细等级参考ulog.h中 LOG_EMERG - LOG_NONE
    ULOG_CONFIG_STOP_FILTER_FS: 4        # ulog日志到文件系统过滤等级， 详细等级参考ulog.h中 LOG_EMERG - LOG_NONE
    ULOG_CONFIG_STOP_FILTER_DEFAULT: 0   # ulog串口或终端日志过滤等级， 详细等级参考ulog.h中 LOG_EMERG - LOG_NONE
    ULOG_CONFIG_SYSLOG_TIME_FORMAT: 0    # ulog日志时间格式化配置项，1表示开启，0表示关闭
    ULOG_CONFIG_DEFAULT_DIR_ASYNC: 0     # ulog使用异步模式登录默认直接
    ULOG_CONFIG_LOG_SIZE: 256            # ulog默认打印缓存大小为256，可根据实际情况修改
    ULOG_CONFIG_ASYNC_BUF_SIZE: 6114     # ulog异步缓存大小
#   CONFIG_PARAM_NOT_CHECK: y
#   CONFIG_CLI: y

## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相当路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径
install:
  - dest: "include/ulog"
    source:
      - "include/ulog/*.h"

## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相当路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
