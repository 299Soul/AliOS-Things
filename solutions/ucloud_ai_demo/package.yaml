
name: ucloud_ai_demo
version: master                                   # <必选项> 组件版本号
description:  ucloud ai demo code

type: solution

solution:
  cpu_id: cpu0
  board_name: haas100
## 第二部分：依赖信息
#           指定该组件依赖的组件及版本，版本支持条件比较，支持：>=v1.0, >v1.0, ==v1.0, <=v1.0, <v1.0, v1.0
#           未指定条件时，默认为 ==，如 v1.0 与 ==v1.0
# depends:                                 # <可选项> 该组件依赖其他的组件，合理的依赖才能保证组件能编译、使用
#   - minilibc: v7.2.0
#   - aos: >=v7.2.0
depends:
  - netmgr: master
  - osal_aos: master
  - cli: master
  - linksdk: master
  - ai_agent: master
  - ugraphics: master
  - ucamera: master
  - uservice: master
  - ucloud_ai: master
  - debug: master
  - ili9341: master
  - lwip: master
  - wifi: master

# supported_boards 中记录当前组件能支持的所有板子
supported_boards:
  - haas100: master

# build_config:
#   include:

## 第四部分：编译连接信息
build_config:                            # <可选项> 编译配置项
  prebuild_script: cp_resources.py
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
# source_file:                             # <可选项> 指定参与编译的源代码文件，支持通配符，采用相对路径
#   - src/*.c                              # 例：组件 src 目录下所有的扩展名为 c 的源代码文件
source_file:
  - ucloud_ai_demo.c
  - linkkit_event.c
  - main.c
  - maintask.c

## 第五部分：配置信息
def_config:                              # 组件的可配置项
  CONFIG_UCLOUD_AI_ENGINE_ENABLE: 1
  CONFIG_ALICLOUD_FACEBODY_ENABLE: 1
  CONFIG_ALICLOUD_IMAGERECOG_ENABLE: 1
  CONFIG_ALICLOUD_IMAGEENHAN_ENABLE: 1
  CONFIG_ALICLOUD_OBJECTDET_ENABLE: 1
  CONFIG_ALICLOUD_IMAGESEG_ENABLE: 1
  CONFIG_ALICLOUD_OCR_ENABLE: 1
  CONFIG_ALICLOUD_OSS_ENABLE: 1

  # OSS 配置信息, 用户在这里替换自己的OSS信息
  OSS_ACCESS_KEY: "Your-Access-Key"
  OSS_ACCESS_SECRET: "Your-Access-Secret"
  OSS_ENDPOINT: "Your-OSS-Endpoint"
  OSS_BUCKET: "Your-OSS-Bucket"

  # linkkit sdk三元组信息
  PRODUCT_KEY: "Your-Product-Key"
  RODUCT_SECRET: "Your-Product-Secret"
  DEVICE_NAME: "Your-Device-Name"
  DEVICE_SECRET: "Your-Device-Secret"

  # wifi camera的http访问地址,用户根据自己摄像头的IP地址进行替换
  WIFICAMERA_URL: "http://192.168.43.166:80/capture"

  # wifi camera配置的http访问地址,用户根据自己摄像头的配置方法进行替换
  WIFICAMERA_FRAME_SIZE_CONTROL_URL: "http://192.168.43.166:80/control\\?var=framesize\\&val=5" # QVGA 320x240

  # 配置你要对比的人脸
  MYFACE_PATH: "http://viapi-test.oss-cn-shanghai.aliyuncs.com/viapi-3.0domepic/facebody/CompareFace/CompareFace-left1.png"

  CLI_IOBOX_ENABLE: 1        # 使能文件系统

## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相当路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径

## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相当路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
