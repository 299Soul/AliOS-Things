#! /bin/env python

from aostools import Make

defconfig = Make(elf='aos.elf', objcopy='binary/linksdk_demo@haas100.bin')

Export('defconfig')

if defconfig.build_env.env['PLATFORM'] == 'win32':
    import win32file
    import win32event
    import win32process
    import win32security
    import os

    def win_spawn(sh, escape, cmd, args, spawnenv):

        newargs = ' '.join(args[1:])
        if cmd.startswith("arm-none-eabi") or cmd.startswith("arm-alios-eabi"):
            for p in spawnenv["PATH"].split(";"):
                exe_file = os.path.join(p, "%s.exe" % cmd)
                if os.path.isfile(exe_file):
                    cmd = exe_file
                    break
        cmdline = cmd + " " + newargs

        # check for any special operating system commands
        if cmd == 'del':
            for arg in args[1:]:
                win32file.DeleteFile(arg)
            exit_code = 0
        else:
            # otherwise execute the command.
            handle = win32process.CreateProcess(None, cmdline, None, None, 1, 0, spawnenv, None, win32process.STARTUPINFO())
            win32event.WaitForSingleObject(handle[0], win32event.INFINITE)
            exit_code = win32process.GetExitCodeProcess(handle[0])
            win32file.CloseHandle(handle[0])
            win32file.CloseHandle(handle[1])
        return exit_code

    defconfig.build_env.env['SPAWN'] = win_spawn


defconfig.build_components()
